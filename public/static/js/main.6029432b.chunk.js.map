{"version":3,"sources":["component/RoomDaily/Room.module.scss","App.module.scss","layout/Header/Header.module.scss","component/RoomDaily/History/History.module.scss","component/RoomDaily/ListRoomDetail/ListRoomDetail.module.scss","component/RoomDaily/AddRoom/AddRoom.module.scss","component/WaterManager/ListWater.module.scss","component/WaterManager/Inventory.module.scss","component/Modal/modal.module.scss","api/index.js","component/dateUtils.js","component/RoomDaily/History/HistoryRoom.js","component/Modal/ModalContext.js","component/RoomDaily/AddRoom/AddRoom.js","component/RoomDaily/ListRoomDetail/ListRoomDetail.js","component/WaterManager/Inventory.js","component/WaterManager/ListWater.js","layout/Header/index.js","component/debounce.js","component/RoomDaily/Room.js","component/RoomDaily/RoomList.js","component/Modal/GlobalModal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","api","axios","create","baseURL","timeout","handleRequest","async","promise","errorMessage","data","error","Error","editRoom","room","adjust","post","roomNumber","newDetails","fetchRoomsList","get","localStorage","setItem","JSON","stringify","fetchHistory","url","type","convertToISODate","dateStr","test","day","month","year","split","formatDateValue","datetime","date","formatTimeValue","time","substring","cx","classNames","bind","styles","HistoryRoom","history","setHistory","useState","currentPage","setCurrentPage","useEffect","getHistory","sortedHistory","sort","a","b","Date","checkOutDate","checkInDate","loadHistory","console","log","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","flatpickr","enableTime","noCalendar","dateFormat","time_24hr","minuteIncrement","maxDate","_jsxs","children","_jsx","className","map","item","index","totalAmount","dangerouslySetInnerHTML","__html","description","onClick","idToDelete","status","updatedHistory","filter","_id","handleDeleteItem","colSpan","style","textAlign","padding","fontStyle","prevPage","disabled","nextPage","ModalContext","createContext","ModalProvider","_ref","showModal","setShowModal","modalContent","setModalContent","Provider","value","openModal","content","closeModal","useModal","useContext","AddRoom","setData","dailyprice","firstHour","extraHour","message","setMessage","handleAddRoom","object","daily","addRoom","id","onChange","e","prev","target","required","ListRoomDetail","ListRoom","setListroom","sortedRooms","String","padStart","toLocaleString","roomID","deleted","window","location","reload","handleEditRoom","Inventory","waterList","setWaterList","getWaterList","TestInventory","resetWt","prompt","alert","confirm","TestInventory2","ListWater","tenNuoc","soLuongDau","ban","thucTeCuoiKy","search","setSearch","originalList","setOriginalList","fetchWaterList","filtered","toLowerCase","includes","handleSearch","handleAddWater","name","amount","nhap","soLuong","updated","Number","updateWater","response","placeholder","Header","href","Room","_tempDates3","_tempDates4","handleInputChange","setCurrentTime","calculate","debounce","useDebounceHandler","debounceTimers","useRef","key","newVal","oldVal","callback","delay","arguments","undefined","current","clearTimeout","setTimeout","tempDates","setTempDates","checkDateRef","originalRef","handleChange","_originalRef$current","newValue","originalValue","_tempDates","_tempDates2","initFlatpickr","refs","checkindate","checkoutdate","checkintime","checkouttime","setRef","el","ref","handleCalculate","RoomList","rooms","setRooms","loadRooms","now","toLocaleDateString","timeStr","getHours","getMinutes","dateStrBK","convertToStandardDateFormat","formattedDate","formattedDateTime","checkinDateInput","checkinTimeInput","_flatpickr","setDate","checkoutDateInput","checkoutTimeInput","checkInTime","checkOutTime","start","end","total","notes","diffMs","diffMinutes","diffHours","startHour","endHour","isSameDay","toDateString","isNightStay","dataRoom","find","push","extraMinutes","extraHoursCharged","floor","surcharge","surchargeHours","firstDayEnd","getDate","setHours","lastNoon","fullDays","round","extraHours","objectDatatoSaveHistory","note","join","i","saveRoomHistory","GlobalModal","_Fragment","stopPropagation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.6029432b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"Room_room__3dn-v\",\"edit-room\":\"Room_edit-room__2UOE_\",\"time-container\":\"Room_time-container__1cqrG\",\"btn-container\":\"Room_btn-container__3bsDN\",\"btn-top\":\"Room_btn-top__3f26V\",\"check-in\":\"Room_check-in__uGDzQ\",\"check-out\":\"Room_check-out__245g2\",\"button\":\"Room_button__3GK7E\",\"btn-calculate\":\"Room_btn-calculate__12o8-\",\"calculate\":\"Room_calculate__NsbGe\",\"borderRun\":\"Room_borderRun__1BOZk\",\"calculate-header\":\"Room_calculate-header__2oNqo\",\"room-info\":\"Room_room-info__1i3is\",\"check-in-time\":\"Room_check-in-time__P7-KB\",\"check-out-time\":\"Room_check-out-time__2e3DF\",\"total-amount\":\"Room_total-amount__2ZyRh\",\"title\":\"Room_title__2iwMF\",\"additional-note\":\"Room_additional-note__w53VK\",\"control\":\"Room_control__1S4n6\",\"footer-note\":\"Room_footer-note__307lz\",\"title-table\":\"Room_title-table__3aXL3\",\"filter-container\":\"Room_filter-container__3TJ1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1vo9O\",\"borderRun\":\"App_borderRun__2iWKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1jUDE\",\"header__nav\":\"Header_header__nav__2dn1u\",\"header__menu\":\"Header_header__menu__31mMF\",\"header__item\":\"Header_header__item__2tILp\",\"header__link\":\"Header_header__link__SinI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title-table\":\"History_title-table__228zP\",\"history-table\":\"History_history-table__IC4Mj\",\"add-room\":\"History_add-room__XPnpc\",\"pagination\":\"History_pagination__2zJno\",\"notification\":\"History_notification__-NJI2\",\"controls\":\"History_controls__-CZIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title-table\":\"ListRoomDetail_title-table__ml7io\",\"history-table\":\"ListRoomDetail_history-table__1vKnO\",\"add-room\":\"ListRoomDetail_add-room__33fcw\",\"pagination\":\"ListRoomDetail_pagination__1xP6h\",\"notification\":\"ListRoomDetail_notification__2XcTJ\",\"controls\":\"ListRoomDetail_controls__16woz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddRoom_container__2M6M9\",\"title\":\"AddRoom_title__3u_SX\",\"form\":\"AddRoom_form__1RRjs\",\"formGroup\":\"AddRoom_formGroup__3GaUv\",\"label\":\"AddRoom_label__2wxth\",\"input\":\"AddRoom_input__1MztV\",\"button\":\"AddRoom_button__2XxF9\",\"message\":\"AddRoom_message__2miCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"ListWater_search__1kSQX\",\"title-table\":\"ListWater_title-table__2mf65\",\"water-table-history-table\":\"ListWater_water-table-history-table__2cswU\",\"plus-minus-button\":\"ListWater_plus-minus-button__1Rrs8\",\"water-table-pagination\":\"ListWater_water-table-pagination__3SGE1\",\"water-table-notification\":\"ListWater_water-table-notification__26L_G\",\"water-table-controls\":\"ListWater_water-table-controls__1KLWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Inventory_search__2uETV\",\"news\":\"Inventory_news__2U8HP\",\"title-table\":\"Inventory_title-table__wiBor\",\"water-table-history-table\":\"Inventory_water-table-history-table__2gojk\",\"water-table-pagination\":\"Inventory_water-table-pagination___jlke\",\"water-table-notification\":\"Inventory_water-table-notification__259yr\",\"water-table-controls\":\"Inventory_water-table-controls__1INCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal_overlay__2wYXf\",\"modal-parent\":\"modal_modal-parent__2mNpV\",\"modal-content\":\"modal_modal-content__26qwn\",\"modal-close\":\"modal_modal-close__2J9y6\"};","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3000\", // có thể gắn token, interceptors, v.v.\r\n  timeout: 10000,\r\n});\r\n\r\n// Hàm xử lý promise chung có catch lỗi\r\nconst handleRequest = async (promise, errorMessage) => {\r\n  try {\r\n    const res = await promise;\r\n    return res.data;\r\n  } catch (error) {\r\n\r\n    throw new Error(errorMessage); // Ném lỗi về hàm gọi\r\n  }\r\n};\r\n\r\n// Chỉnh sửa thông tin phòng\r\nconst editRoom = async(room, adjust) => {\r\n  return await handleRequest(\r\n    api.post('/api/edit-room', {\r\n      roomNumber: room,\r\n      newDetails: adjust\r\n    }),\r\n    \"Lỗi khi chỉnh sửa phòng:\"\r\n  );\r\n};\r\n\r\n// Chỉnh sửa thông tin phòng\r\nconst addRoom = async (object) => {\r\n  try {\r\n    const response = await handleRequest(\r\n      api.post('/api/addroom', {\r\n        roomNumber: object.roomNumber,\r\n        daily: object.dailyprice,\r\n        firstHour: object.firstHour,\r\n        extraHour: object.extraHour,\r\n        checkInDate: \"\",  // Thêm giá trị thực tế nếu cần\r\n        checkOutDate: \"\", // Thêm giá trị thực tế nếu cần\r\n      }),\r\n      \"Lỗi khi thêm phòng\" // Thông báo lỗi mặc định\r\n    );\r\n    return response; // Trả về dữ liệu nhận được từ API\r\n  } catch (error) {\r\n    throw new Error(error.message || \"Không thể thêm phòng, vui lòng thử lại!\");\r\n  }\r\n};\r\n\r\n\r\n\r\n// Lưu lịch sử chỉnh sửa phòng\r\nconst saveRoomHistory = (room, adjust) => {\r\n  return handleRequest(\r\n    api.post('/api/history', {\r\n      roomNumber: room,\r\n      totalAmount: adjust.totalAmount,\r\n      checkInDate: adjust.checkInDate,\r\n      checkOutDate: adjust.checkOutDate,\r\n      description: adjust.description,\r\n    }),\r\n    \"Lỗi khi lưu lịch sử phòng:\"\r\n  );\r\n};\r\n\r\n// Reset dữ liệu phòng\r\nconst deleteRoomData = (room) => {\r\n  return handleRequest(\r\n    api.get(`/api/reset/${room}`),\r\n    \"Lỗi khi reset phòng:\"\r\n  );\r\n};\r\n\r\n// Lấy danh sách phòng và lưu vào localStorage\r\nconst fetchRoomsList = async () => {\r\n  const data = await handleRequest(\r\n    api.get(\"/api/rooms\"),\r\n    \"Lỗi khi lấy danh sách phòng:\"\r\n  );\r\n  if (data) {\r\n    localStorage.setItem(\"rooms\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\n// Lấy danh sách phòng và lưu vào localStorage\r\nconst fetchHistory = async (type) => {\r\n  const url = type === 'all' ? \"/api/history/all\" : `/api/history/${type}`;\r\n  return await handleRequest(api.get(url), \"Lỗi khi lấy danh sách phòng:\");\r\n};\r\n\r\n\r\n// QUAN LY NUOC\r\nconst fetchWaterList = async () => {\r\n  const data = await handleRequest(\r\n    api.get(\"/api/water\"),\r\n    \"Lỗi khi lấy danh sách phòng:\"\r\n  );\r\n  if (data) {\r\n    //localStorage.setItem(\"rooms\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\n// Cập nhật lượt bán\r\nconst updateWater = async (object) => {\r\n  try {\r\n    const response = await handleRequest(\r\n      api.post('/api/update-water', {\r\n        tenNuoc: object.tenNuoc,\r\n        soLuong: Number(object.soLuong) || 0,\r\n        nhap: Number(object.nhap) || 0,\r\n      }),\r\n      \"Lỗi khi thêm phòng\" // Thông báo lỗi mặc định\r\n    );\r\n    return response; // Trả về dữ liệu nhận được từ API\r\n  } catch (error) {\r\n    throw new Error(error.message || \"Không thể thêm phòng, vui lòng thử lại!\");\r\n  }\r\n};  \r\n\r\n// QUAN LY NUOC\r\nconst TestInventory = async () => {\r\n  const data = await handleRequest(\r\n    api.get(\"/api/kiemhangthuall\"),\r\n    \"Lỗi khi lấy danh sách phòng:\"\r\n  );\r\n  if (data) {\r\n    //localStorage.setItem(\"rooms\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\n// QUAN LY NUOC\r\nconst TestInventory2 = async () => {\r\n  const check = window.confirm(\"Bạn có chắc muốn tạo mới dữ liêu không? \\n Hệ thống sẽ tự động lấy Số lượng cuối và Chuyển về lại Số lượng Đầu\");\r\n  if(!check) return;  \r\n  const data = await handleRequest(\r\n    api.get(\"/api/resetwt\"),\r\n    \"Lỗi khi lấy danh sách phòng:\"\r\n  );\r\n  if (data) {\r\n    //localStorage.setItem(\"rooms\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\n\r\nexport { api, editRoom, saveRoomHistory,deleteRoomData,fetchRoomsList,fetchHistory,addRoom,fetchWaterList,updateWater,TestInventory,TestInventory2 };\r\n","// Hàm lấy giờ Việt Nam\r\nexport function getVietnamTime() {\r\n    const now = new Date();\r\n    const utc = now.getTime() + now.getTimezoneOffset() * 60000;\r\n    return new Date(utc + 7 * 3600000);\r\n}\r\n\r\n// Hàm định dạng ngày theo múi giờ Việt Nam\r\nexport function formatVietnamDate(dateObj) {\r\n    console.log(\"du lieu nhan duoc\", dateObj)\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0');\r\n    const year = dateObj.getFullYear();\r\n    return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport function convertToISODate(dateStr) {\r\n    if (!/^\\d{2}-\\d{2}-\\d{4}$/.test(dateStr)) return '';\r\n    const [day, month, year] = dateStr.split('-');\r\n    return `${year}-${month}-${day}`;\r\n}\r\n  \r\n\r\nexport const convertToStandardDateFormat = (dateStr, timeStr) => {\r\n    // Tách ngày thành ngày, tháng, năm\r\n    const [day, month, year] = dateStr.split(\"/\");\r\n  \r\n    // Chuyển đổi thành định dạng yyyy-mm-dd\r\n    const formattedDate = `${day.padStart(2, \"0\")}-${month.padStart(2, \"0\")}-${year}`;\r\n  \r\n    let formattedDateTime\r\n    // Kết hợp ngày với giờ\r\n    if(timeStr) {\r\n        formattedDateTime = `${formattedDate} ${timeStr}`;\r\n    }else {\r\n        formattedDateTime = `${formattedDate}`;\r\n    }\r\n    \r\n  \r\n    return formattedDateTime;\r\n};\r\n\r\nexport const formatDateValue = (datetime) => {\r\n    if (!datetime) return \"\";\r\n    const [year, date, day] = datetime.split(\" \")[0].split(\"-\"); // Chia chuỗi theo dấu \"-\"\r\n\r\n    return day + \"-\" + date + \"-\" + year; // Định dạng lại thành d-m-Y\r\n  };\r\n\r\n  // Lấy giờ định dạng hh:mm\r\nexport const formatTimeValue = (datetime) => {\r\n    if (!datetime) return \"\";\r\n    const [, time] = datetime.split(\" \");\r\n    return time?.substring(0, 5) || \"\";\r\n  };\r\n  \r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./History.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { fetchHistory } from \"../../../api\";\r\n\r\nimport flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport { formatDateValue, formatTimeValue } from \"../../dateUtils\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction HistoryRoom() {\r\n  const [history, setHistory] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  useEffect(() => {\r\n    const loadHistory = async () => {\r\n      const getHistory = await fetchHistory('all');\r\n      const sortedHistory = await getHistory.sort((a, b) => new Date(b.checkOutDate) - new Date(a.checkInDate));\r\n      setHistory(sortedHistory);\r\n    };\r\n\r\n    loadHistory();\r\n  }, []);\r\n  console.log(history)\r\n\r\n  // Tính toán dữ liệu cho mỗi trang\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = history.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // Chuyển sang trang kế tiếp\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages()) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  // Chuyển sang trang trước\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // Tính tổng số trang\r\n  const totalPages = () => {\r\n    return Math.ceil(history.length / itemsPerPage);\r\n  };\r\n\r\n\r\n  const handleDeleteItem = async (idToDelete) => {\r\n    try {\r\n      // Gửi yêu cầu xóa đến backend\r\n      const response = await fetchHistory(idToDelete);\r\n\r\n      // Kiểm tra nếu xóa thành công (tùy vào response từ backend)\r\n      if (response.status === 200) {\r\n        // Xóa phần tử khỏi state history\r\n        const updatedHistory = history.filter(item => item._id !== idToDelete);\r\n        setHistory(updatedHistory);\r\n      } else {\r\n        console.error(\"Không thể xóa lịch sử, vui lòng thử lại.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xóa lịch sử:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n      flatpickr(`#startTime`, {\r\n        enableTime: true,\r\n        noCalendar: true,\r\n        dateFormat: \"H:i\",\r\n        time_24hr: true,\r\n        minuteIncrement: 60,\r\n  \r\n      });\r\n      flatpickr(`#endTime`, {\r\n        enableTime: true,\r\n        noCalendar: true,\r\n        dateFormat: \"H:i\",\r\n        time_24hr: true,\r\n        minuteIncrement: 60,\r\n      });\r\n  \r\n  \r\n      flatpickr(`#startDate`, {\r\n        dateFormat: \"d-m-Y\", // <-- Định dạng ngày/tháng/năm đúng\r\n        maxDate: \"today\",     // Chặn các ngày sau ngày hiện tại\r\n      });\r\n  \r\n      flatpickr(`#endDate`, {\r\n        dateFormat: \"d-m-Y\", // <-- Định dạng ngày/tháng/năm đúng\r\n      });\r\n  \r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={cx(\"title-table\")}>Lịch Sử Thuê Phòng</h1>\r\n      \r\n      <table className={cx(\"history-table\")}>\r\n        <thead>\r\n          <tr>\r\n            <th>Số Phòng</th>\r\n            <th>Ngày Vào</th>\r\n            <th>Ngày Ra</th>\r\n            <th>Tổng Tiền</th>\r\n            <th>Ghi Chú</th>\r\n            <th>Hành Động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className={cx(\"data\")}>\r\n          {currentItems && currentItems.length > 0 ? (\r\n            currentItems.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.roomNumber}</td>\r\n                <td>\r\n                  Ngày {formatDateValue(item.checkInDate)} {formatTimeValue(item.checkInDate).split(\":\")[0]} giờ {formatTimeValue(item.checkInDate).split(\":\")[1]} phút\r\n                </td>\r\n\r\n                <td>\r\n                  Ngày {formatDateValue(item.checkOutDate)} {formatTimeValue(item.checkOutDate).split(\":\")[0]} giờ {formatTimeValue(item.checkOutDate).split(\":\")[1]} phút\r\n                </td>\r\n                <td>{item.totalAmount}</td>\r\n                <td dangerouslySetInnerHTML={{ __html: item.description }} />\r\n                <td><button onClick={() => handleDeleteItem(item._id)}>Xóa</button></td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>\r\n                Không có bảng nào được ghi\r\n              </td>\r\n            </tr>\r\n          )}\r\n\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className={cx(\"pagination\")}>\r\n        <div className={cx(\"notification\")}><span>Trang {currentPage} of {totalPages()}</span></div>\r\n        <div className={cx(\"controls\")}>\r\n          <button onClick={prevPage} disabled={currentPage === 1}>\r\n            Trang trước\r\n          </button>\r\n          <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n            Trang sau\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryRoom;\r\n","// src/context/ModalContext.js\r\nimport { createContext, useState, useContext } from \"react\";\r\n\r\nconst ModalContext = createContext();\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(null);\r\n\r\n  const openModal = (content) => {\r\n    setModalContent(content);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setModalContent(null);\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ showModal, modalContent, openModal, closeModal }}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useModal = () => useContext(ModalContext);\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./AddRoom.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { addRoom } from \"api\";\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction AddRoom() {\r\n\r\n  const [data, setData] = useState({\r\n    roomNumber: \"\",\r\n    dailyprice: \"\",\r\n    firstHour: \"\",\r\n    extraHour: \"\"\r\n  });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleAddRoom = async (event) => {\r\n    \r\n  \r\n    const { roomNumber, dailyprice, firstHour, extraHour } = data;\r\n  \r\n    if (!roomNumber || !dailyprice || !firstHour || !extraHour) {\r\n      setMessage(\"Vui lòng nhập đầy đủ thông tin!\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await addRoom(data);\r\n      if (response) {\r\n        setMessage(\"Thêm phòng thành công!\");\r\n        // Reset form nếu cần\r\n        // setData({ roomNumber: '', dailyprice: '', firstHour: '', extraHour: '', ... });\r\n      }\r\n    } catch (error) {\r\n      console.error(error); // log ra để dễ debug\r\n      setMessage(error.message || \"Có lỗi xảy ra khi thêm phòng!\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={cx(\"container\")}>\r\n      <h2 className={cx(\"title\")}>Thêm Phòng Mới</h2>\r\n      <form className={cx(\"form\")} id=\"roomForm\">\r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Số phòng:</label>\r\n          <input value={data.roomNumber || ''} onChange={(e) =>\r\n            setData((prev) => ({ ...prev, roomNumber: e.target.value }))\r\n          } type=\"number\" id=\"roomNumber\" required className={cx(\"input\")} />\r\n        </div>\r\n\r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Giá phòng ngày:</label>\r\n          <input value={data.dailyprice || ''} onChange={(e) =>\r\n            setData((prev) => ({ ...prev, dailyprice: e.target.value }))\r\n          } type=\"number\" id=\"daily\" required className={cx(\"input\")} />\r\n        </div>\r\n\r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Giờ đầu tiên:</label>\r\n          <input value={data.firstHour || ''} onChange={(e) =>\r\n            setData((prev) => ({ ...prev, firstHour: e.target.value }))\r\n          } type=\"number\" id=\"firstHour\" required className={cx(\"input\")} />\r\n        </div>\r\n\r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Giá thêm giờ:</label>\r\n          <input value={data.extraHour || ''} onChange={(e) =>\r\n            setData((prev) => ({ ...prev, extraHour: e.target.value }))\r\n          } type=\"number\" id=\"extraHour\" required className={cx(\"input\")} />\r\n        </div>\r\n        <button type=\"button\" onClick={() => handleAddRoom()} className={cx(\"button\")}>Thêm Phòng</button>\r\n      </form>\r\n      <p id=\"message\" className={cx(\"message\")}>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddRoom;","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ListRoomDetail.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { fetchRoomsList } from \"../../../api\";\r\nimport { editRoom } from \"api\";\r\nimport { useModal } from 'component/Modal/ModalContext';\r\nimport AddRoom from \"../AddRoom/AddRoom\";\r\nimport HistoryRoom from \"../History/HistoryRoom\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction ListRoomDetail() {\r\n\r\n  const {openModal} = useModal();\r\n\r\n  const [ListRoom, setListroom] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  useEffect(() => {\r\n    const loadHistory = async () => {\r\n      const getRooms = await fetchRoomsList();\r\n      const sortedRooms = getRooms.sort((a, b) => a.roomNumber - b.roomNumber);\r\n      setListroom(sortedRooms);\r\n    };\r\n\r\n    loadHistory();\r\n  }, []);\r\n  \r\n\r\n  // Tính toán dữ liệu cho mỗi trang\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = ListRoom.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // Chuyển sang trang kế tiếp\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages()) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  // Chuyển sang trang trước\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // Tính tổng số trang\r\n  const totalPages = () => {\r\n    return Math.ceil(ListRoom.length / itemsPerPage);\r\n  };\r\n\r\n\r\n//   const handleDeleteItem = async (idToDelete) => {\r\n//     try {\r\n//       // Gửi yêu cầu xóa đến backend\r\n//       const response = await fetchHistory(idToDelete);\r\n\r\n//       // Kiểm tra nếu xóa thành công (tùy vào response từ backend)\r\n//       if (response.status === 200) {\r\n//         // Xóa phần tử khỏi state history\r\n//         const updatedHistory = history.filter(item => item._id !== idToDelete);\r\n//         setHistory(updatedHistory);\r\n//       } else {\r\n//         console.error(\"Không thể xóa lịch sử, vui lòng thử lại.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Lỗi khi xóa lịch sử:\", error);\r\n//     }\r\n//   };\r\n\r\nconst handleEditRoom = async(roomID) => {\r\n    const response = await editRoom(roomID, {deleted: true});\r\n    if(response) {\r\n      window.location.reload();\r\n    }    \r\n  }\r\n\r\nconst handleOpenAddRoom = () => {\r\n    openModal(<AddRoom />);\r\n}\r\n\r\nconst handleHistoryRoom = () => {\r\n    openModal(<HistoryRoom />);\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={cx(\"title-table\")}>Danh sách phòng cụ thể</h1>\r\n      <table className={cx(\"history-table\")}>\r\n      <button onClick={(e) => handleOpenAddRoom()} className={cx(\"add-room\")}>Thêm phòng</button>\r\n        <thead>\r\n          <tr>\r\n            <th>Số Phòng</th>\r\n            <th>Giá phòng</th>\r\n            <th>Lịch sử thuê</th>\r\n            <th>Hành động</th>\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody className={cx(\"data\")}>\r\n          {currentItems && currentItems.length > 0 ? (\r\n            currentItems.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>Phòng: {String(item.roomNumber).padStart(3, \"0\")}</td>\r\n                <td>\r\n                    <span>Giá phòng ngày: {item.daily.toLocaleString()} VNĐ</span>\r\n                    <span>Giá phòng giờ đầu: {item.firstHour.toLocaleString()} VNĐ</span>\r\n                    <span> Giá phòng giờ đầu: {item.extraHour.toLocaleString()} VNĐ</span>\r\n                    \r\n                   \r\n                </td>\r\n                <td><button onClick={(e) => handleHistoryRoom()}>Xem ngay</button></td>\r\n                <td><button onClick={(e) => handleEditRoom(item._id)}>Xóa</button></td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>\r\n                Không có bảng nào được ghi\r\n              </td>\r\n            </tr>\r\n          )}\r\n\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className={cx(\"pagination\")}>\r\n        <div className={cx(\"notification\")}><span>Trang {currentPage} of {totalPages()}</span></div>\r\n        <div className={cx(\"controls\")}>\r\n          <button onClick={prevPage} disabled={currentPage === 1}>\r\n            Trang trước\r\n          </button>\r\n          <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n            Trang sau\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListRoomDetail;\r\n","\r\nimport React from 'react';\r\nimport styles from './Inventory.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { useEffect, useState } from 'react';\r\nimport { useModal } from 'component/Modal/ModalContext';\r\nimport ListWater from './ListWater';\r\nimport { TestInventory,TestInventory2 } from 'api';\r\n\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nfunction Inventory() {\r\n\r\n    const [waterList, setWaterList] = useState([]);        // Dữ liệu hiển thị\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 40;\r\n    const {openModal} = useModal();\r\n\r\n    // Lấy danh sách nước\r\n    const getWaterList = async () => {\r\n        console.log(\"ham da duoc goi\")\r\n        try {\r\n            const data = await TestInventory();\r\n            if (data) {\r\n                console.log(data)\r\n                setWaterList(data);     // Hiển thị mặc định\r\n            }\r\n\r\n            return data\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy danh sách nước:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWaterList();\r\n    }, []);\r\n\r\n    // Tính toán phân trang\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = waterList.slice(indexOfFirstItem, indexOfLastItem);\r\n    \r\n\r\n    const nextPage = () => {\r\n        if (currentPage < totalPages()) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const prevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const totalPages = () => {\r\n        return Math.ceil(waterList.length / itemsPerPage);\r\n    };\r\n\r\n\r\n    const HandleBack = () => {  \r\n        \r\n        openModal(<ListWater />); // Mở modal với nội dung là component ListWater\r\n    }\r\n\r\n    const resetWt = async() => { \r\n        const password = prompt(\"Để reset bạn cần nhập mật khẩu: \")\r\n        if(password !== \"0786566176\") return alert(\"Mật khẩu không đúng\")\r\n        const data = await TestInventory2();\r\n        if(data) {\r\n            openModal(<ListWater />); // Mở modal với nội dung là component ListWater\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={cx(\"search\")}>\r\n\r\n                <button onClick={(e) => HandleBack()} className={cx(\"search-button\")}>Quay lại</button>\r\n                <button onClick={(e) => resetWt()} className={cx(\"search-button\", \"news\")}>Làm mới</button>\r\n            </div>\r\n            <table className={cx(\"water-table-history-table\")}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Loại Nước</th>\r\n                        <th>Số lượng đầu</th>\r\n                        <th>Số lượng bán</th>\r\n                        <th>Số lượng cuối</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className={cx(\"water-table-data\")}>\r\n                    {currentItems.length > 0 ? (\r\n                        currentItems.map((item, index) => (\r\n                            \r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>Nước {item.tenNuoc}</td>\r\n                                <td><span>{item.soLuongDau}</span></td>\r\n                                <td><span>{item.ban}</span></td>\r\n                                <td><span>{item.thucTeCuoiKy}</span></td>\r\n                                \r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"8\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>\r\n                                Không có bảng nào được ghi\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Pagination Controls */}\r\n            <div className={cx(\"water-table-pagination\")}>\r\n                <div className={cx(\"water-table-notification\")}>\r\n                    <span>Trang {currentPage} of {totalPages()}</span>\r\n                </div>\r\n                <div className={cx(\"water-table-controls\")}>\r\n                    <button onClick={prevPage} disabled={currentPage === 1}>\r\n                        Trang trước\r\n                    </button>\r\n                    <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n                        Trang sau\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inventory;","import React, { useEffect, useState } from 'react';\r\nimport styles from './ListWater.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { fetchWaterList, updateWater } from 'api';\r\nimport { useModal } from 'component/Modal/ModalContext';\r\nimport Inventory from 'component/WaterManager/Inventory';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction ListWater() {\r\n    const { openModal } = useModal();\r\n    const [search, setSearch] = useState(\"\");\r\n    const [waterList, setWaterList] = useState([]);        // Dữ liệu hiển thị\r\n    const [originalList, setOriginalList] = useState([]);  // Dữ liệu gốc\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 40;\r\n\r\n    // Lấy danh sách nước\r\n    const getWaterList = async () => {\r\n        try {\r\n            const data = await fetchWaterList();\r\n            if (data) {\r\n                setOriginalList(data);  // Lưu bản gốc\r\n                setWaterList(data);     // Hiển thị mặc định\r\n            }\r\n\r\n            return data\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy danh sách nước:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWaterList();\r\n    }, []);\r\n\r\n\r\n    const handleSearch = (e) => {   \r\n        if(search) {\r\n            const filtered = originalList.filter((item) => item.tenNuoc.toLowerCase().includes(search.toLowerCase()));\r\n            setWaterList(filtered); \r\n            return\r\n        }\r\n\r\n        setWaterList(originalList); // Nếu không có gì thì hiển thị lại danh sách gốc\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleSearch(search)\r\n    }, [search])\r\n\r\n  \r\n\r\n    // Tính toán phân trang\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = waterList.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const nextPage = () => {\r\n        if (currentPage < totalPages()) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const prevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const totalPages = () => {\r\n        return Math.ceil(waterList.length / itemsPerPage);\r\n    };\r\n\r\n    // Cập nhật số lượng nước khi bán\r\n    const handleAddWater = async (name, type) => { \r\n        const amount = prompt(\"Nhập số lượng nước đã bán?\\nNếu muốn trừ số lượng -(số lượng muốn trừ)\");\r\n        if (amount) {\r\n            let object\r\n            if(type == \"nhap\") {\r\n                object = {\r\n                    tenNuoc: name,    \r\n                    nhap: amount || 0,\r\n                };\r\n            }else if(type == \"ban\") {\r\n                object = {\r\n                    tenNuoc: name,    \r\n                    soLuong: amount || 0,    \r\n                };\r\n            }\r\n            const updated = await updateWater(object);\r\n            if (updated) {\r\n                const response = await getWaterList();  // Cập nhật lại danh sách\r\n                alert(\"Nạp dữ liệu thành công\")\r\n                \r\n                if (search) {\r\n                    // Tự động lọc lại khi có tìm kiếm\r\n                    const filtered = response.filter((item) =>\r\n                        item.tenNuoc.toLowerCase().includes(search.toLowerCase())\r\n                    );\r\n                    setWaterList(filtered);\r\n                }\r\n            }\r\n        }\r\n    };\r\n     \r\n    const handleInventory = () => {\r\n        openModal(<Inventory />)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={cx(\"search\")}>\r\n                <input \r\n                    value={search || \"\"} \r\n                    onChange={(e) => setSearch(e.target.value)} \r\n                    type=\"text\" \r\n                    placeholder=\"Tìm kiếm...\" \r\n                    className={cx(\"search-input\")} \r\n                />\r\n                <button onClick={(e) => handleInventory()} className={cx(\"search-button\")}>Kiểm hàng</button>\r\n            </div>\r\n            <table className={cx(\"water-table-history-table\")}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Loại Nước</th>\r\n                        <th>Số lượng đầu</th>\r\n                        <th>Số lượng nhập</th>\r\n                        <th>Số lượng bán</th>\r\n                        <th>Số lượng cuối</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className={cx(\"water-table-data\")}>\r\n                    {currentItems.length > 0 ? (\r\n                        currentItems.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{indexOfFirstItem + index + 1}</td>\r\n                                <td>{item.tenNuoc}</td>\r\n                                <td>{item.soLuongDau}</td>\r\n                                <td>{item.nhap}\r\n                                    <a\r\n                                        className={cx(\"plus-minus-button\")}\r\n                                        onClick={() => handleAddWater(item.tenNuoc, \"nhap\")}\r\n                                    >\r\n                                        +\r\n                                    </a>    \r\n                                </td>\r\n                                <td>\r\n                                    {item.ban}{\" \"}\r\n                                    <a\r\n                                        className={cx(\"plus-minus-button\")}\r\n                                        onClick={() => handleAddWater(item.tenNuoc, \"ban\")}\r\n                                    >\r\n                                        +\r\n                                    </a>\r\n                                </td>\r\n                                <td>{item.thucTeCuoiKy}</td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"8\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>\r\n                                Không có bảng nào được ghi\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Pagination Controls */}\r\n            <div className={cx(\"water-table-pagination\")}>\r\n                <div className={cx(\"water-table-notification\")}>\r\n                    <span>Trang {currentPage} of {totalPages()}</span>\r\n                </div>\r\n                <div className={cx(\"water-table-controls\")}>\r\n                    <button onClick={prevPage} disabled={currentPage === 1}>\r\n                        Trang trước\r\n                    </button>\r\n                    <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n                        Trang sau\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListWater;\r\n","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport HistoryRoom from 'component/RoomDaily/History/HistoryRoom';\r\nimport ListRoomDetail from 'component/RoomDaily/ListRoomDetail/ListRoomDetail';\r\n\r\nimport { useModal } from 'component/Modal/ModalContext';\r\nimport ListWater from 'component/WaterManager/ListWater';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Header = () => {\r\n    const { openModal } = useModal();\r\n    const handleOpenHistoryRoom = () => {\r\n        openModal(<HistoryRoom />);\r\n    }\r\n\r\n    const handleOpenListRoom = () => {  \r\n        openModal(<ListRoomDetail />);\r\n    }\r\n\r\n    const handleOpenWaterManager = () => {  \r\n        openModal(<ListWater />);\r\n    }\r\n    return (\r\n        <header className={cx('header')}>\r\n            <nav className={cx('header__nav')}>\r\n                <ul className={cx('header__menu')}>\r\n                    <li className={cx('header__item')}>\r\n                        <a href=\"/\" className={cx('header__link')}>Trang chủ</a>\r\n                    </li>\r\n                    <li className={cx('header__item')}>\r\n                        <a className={cx('header__link')} onClick={() => handleOpenHistoryRoom()}  >Lịch sử</a>\r\n                    </li>\r\n                    <li className={cx('header__item')}>\r\n                        <a className={cx('header__link')} onClick={() => handleOpenListRoom()}>Danh sách phòng</a>\r\n                    </li>\r\n                    <li className={cx('header__item')}>\r\n                        <a className={cx('header__link')} onClick={() => handleOpenWaterManager()}>Quản lý nước</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import { useRef } from \"react\";\r\n\r\nexport const useDebounceHandler = () => {\r\n  const debounceTimers = useRef({});\r\n\r\n\r\n  const debounce = (key, newVal, oldVal, callback, delay = 800) => {\r\n    console.log(\"hàm này hoạt động\")\r\n    if (newVal === oldVal) return;\r\n\r\n    if (debounceTimers.current[key]) {\r\n      clearTimeout(debounceTimers.current[key]);\r\n    }\r\n\r\n    debounceTimers.current[key] = setTimeout(() => {\r\n      callback();\r\n      delete debounceTimers.current[key];\r\n      console.log(\"da goi lai\")\r\n    }, delay);\r\n  };\r\n\r\n  return debounce;\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Room.module.scss\";\r\nimport { formatTimeValue, formatDateValue } from \"../dateUtils\";\r\nimport { useDebounceHandler } from \"../debounce\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Room = ({ room, handleInputChange, setCurrentTime, calculate }) => {\r\n  const debounce = useDebounceHandler();\r\n  const [tempDates, setTempDates] = useState({});\r\n  const checkDateRef = useRef({});\r\n  const originalRef = useRef({});\r\n\r\n  // Hàm xử lý thay đổi input\r\n  const handleChange = (type, roomNumber, e) => {\r\n    const newValue = e.target.value;\r\n\r\n    // Lấy giá trị ban đầu từ ref hoặc tính toán từ room nếu chưa có giá trị\r\n    const originalValue = originalRef.current[`${type}-${roomNumber}`] ??\r\n      (type === \"date\" ? formatDateValue(room.checkInDate) : formatTimeValue(room.checkInDate));\r\n\r\n    // Cập nhật giá trị mới vào originalRef để theo dõi sự thay đổi\r\n    originalRef.current[`${type}-${roomNumber}`] = newValue;\r\n\r\n    // Cập nhật state (tempDates) với giá trị mới\r\n    setTempDates((prev) => ({\r\n      ...prev,\r\n      [`${type}-${roomNumber}`]: newValue,\r\n    }));\r\n\r\n    // Gọi debounce sau khi cập nhật state\r\n    debounce(\r\n      `${type}-${roomNumber}`,\r\n      newValue,\r\n      originalValue,\r\n      () => {\r\n        // Truyền đúng dữ liệu vào handleInputChange\r\n        handleInputChange(roomNumber, {\r\n          type,\r\n          value: newValue,\r\n          ...(type === \"checkTimeDate\"\r\n            ? {\r\n                date: tempDates[`checkInDate-${room.roomNumber}`] ?? formatDateValue(room.checkInDate),\r\n              }\r\n            : {\r\n                time: tempDates[`checkTimeDate-${room.roomNumber}`] ?? formatTimeValue(room.checkInDate),\r\n              }),\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  // Hàm khởi tạo flatpickr\r\n  const initFlatpickr = () => {\r\n    if (!checkDateRef.current[room.roomNumber]) return;\r\n\r\n    const refs = checkDateRef.current[room.roomNumber];\r\n\r\n    flatpickr(refs.checkindate, {\r\n      dateFormat: \"d-m-Y\",\r\n      maxDate: \"today\",\r\n      onChange: () => handleChange(\"checkInDate\", room.roomNumber, { target: { value: refs.checkindate.value } }), // Gọi handleChange khi chọn ngày\r\n    });\r\n\r\n    flatpickr(refs.checkoutdate, {\r\n      dateFormat: \"d-m-Y\",\r\n      onChange: () => handleChange(\"checkOutDate\", room.roomNumber, { target: { value: refs.checkoutdate.value } }), // Gọi handleChange khi chọn ngày\r\n    });\r\n\r\n    flatpickr(refs.checkintime, {\r\n      enableTime: true,\r\n      noCalendar: true,\r\n      dateFormat: \"H:i\",\r\n      time_24hr: true,\r\n      minuteIncrement: 60,\r\n      onChange: () => handleChange(\"checkTimeDate\", room.roomNumber, { target: { value: refs.checkintime.value } }), // Gọi handleChange khi chọn thời gian\r\n    });\r\n\r\n    flatpickr(refs.checkouttime, {\r\n      enableTime: true,\r\n      noCalendar: true,\r\n      dateFormat: \"H:i\",\r\n      time_24hr: true,\r\n      minuteIncrement: 60,\r\n      \r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    initFlatpickr();\r\n  }, [room.roomNumber]);\r\n\r\n  // Hàm để gán ref cho các input\r\n  const setRef = (el, key) => {\r\n    if (!checkDateRef.current[room.roomNumber]) {\r\n      checkDateRef.current[room.roomNumber] = {};\r\n    }\r\n    if (el) {\r\n      checkDateRef.current[room.roomNumber][key] = el;\r\n    }\r\n  };\r\n\r\n  // Hàm tính tiền\r\n  const handleCalculate = () => {\r\n    calculate(room.roomNumber, checkDateRef);\r\n  };\r\n\r\n  return (\r\n    <div className={cx(\"room\")}>\r\n      <h3>Phòng {String(room.roomNumber).padStart(3, \"0\")}</h3>\r\n\r\n      {/* Check-in */}\r\n      <div className={cx(\"time-container\")}>\r\n        <input\r\n          ref={(el) => setRef(el, \"checkindate\")}\r\n          type=\"text\"\r\n          id={`checkin-date-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n          value={tempDates[`checkInDate-${room.roomNumber}`] ?? formatDateValue(room.checkInDate)}\r\n          onChange={(e) => handleChange(\"checkInDate\", room.roomNumber, e)}\r\n        />\r\n        <input\r\n          ref={(el) => setRef(el, \"checkintime\")}\r\n          type=\"text\"\r\n          id={`checkin-time-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n          value={tempDates[`checkTimeDate-${room.roomNumber}`] ?? formatTimeValue(room.checkInDate)}\r\n          onChange={(e) => handleChange(\"checkTimeDate\", room.roomNumber, e)}\r\n        />\r\n      </div>\r\n\r\n      {/* Check-out */}\r\n      <div className={cx(\"time-container\")}>\r\n        <input\r\n          ref={(el) => setRef(el, \"checkoutdate\")}\r\n          type=\"text\"\r\n          id={`checkout-date-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n          \r\n          \r\n        />\r\n        <input\r\n          ref={(el) => setRef(el, \"checkouttime\")}\r\n          type=\"text\"\r\n          id={`checkout-time-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n         \r\n         \r\n        />\r\n      </div>\r\n\r\n      {/* Buttons */}\r\n      <div className={cx(\"btn-container\")}>\r\n        <div className={cx(\"btn-top\")}>\r\n          <button className={cx(\"check-in\")} onClick={() => setCurrentTime(\"checkin\", room.roomNumber, checkDateRef)}>\r\n            Nhận phòng\r\n          </button>\r\n          <button className={cx(\"check-out\")} onClick={() => setCurrentTime(\"checkout\", room.roomNumber, checkDateRef)}>\r\n            Trả phòng\r\n          </button>\r\n        </div>\r\n        <div className={cx(\"btn-bottom\")}>\r\n          <button className={cx(\"btn-calculate\")} onClick={handleCalculate}>\r\n            Tính tiền\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Room from \"./Room\";\r\nimport { fetchRoomsList, editRoom, saveRoomHistory, deleteRoomData } from \"../../api\";  // Giả sử hàm này sẽ fetch dữ liệu từ API\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Room.module.scss\";\r\nimport { convertToStandardDateFormat, convertToISODate } from \"../dateUtils\";\r\nimport { useModal } from \"../Modal/ModalContext\";\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst RoomList = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n\r\n  const { openModal, closeModal } = useModal();\r\n\r\n  useEffect(() => {\r\n    const loadRooms = async () => {\r\n      const fetchedRooms = await fetchRoomsList();\r\n      const sortedRooms = fetchedRooms.sort((a, b) => a.roomNumber - b.roomNumber);\r\n      setRooms(sortedRooms);\r\n    };\r\n\r\n    loadRooms();\r\n  }, []);\r\n\r\n  const handleInputChange = async (roomNumber, data) => {\r\n    let date;\r\n    if (data.type === \"checkTimeDate\") {\r\n      date = data.date + \" \" + data.value;\r\n    } else {\r\n      date = data.value + \" \" + data.time;\r\n    }\r\n    await editRoom(String(roomNumber), { checkInDate: date });\r\n  };\r\n\r\n  const setCurrentTime = async (type, roomNumber, ref) => {\r\n    const now = new Date();\r\n    const dateStr = now.toLocaleDateString(\"vi-VN\"); // \"24/04/2025\"\r\n    const hours = String(now.getHours()).padStart(2, \"0\");\r\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n    const timeStr = `${hours}:${minutes}`;\r\n  \r\n    const dateStrBK = convertToStandardDateFormat(dateStr, timeStr); // GIỮ NGUYÊN LOGIC\r\n  \r\n    if (type === \"checkin\") {\r\n      const checkinDateInput = ref.current[roomNumber][\"checkindate\"];\r\n      const checkinTimeInput = ref.current[roomNumber][\"checkintime\"];\r\n  \r\n      if (checkinDateInput && checkinDateInput._flatpickr) {\r\n        checkinDateInput.value = dateStr; // Hiển thị trực tiếp\r\n        checkinDateInput._flatpickr.setDate(dateStr, true, \"d-m-Y\");\r\n      }\r\n  \r\n      if (checkinTimeInput && checkinTimeInput._flatpickr) {\r\n        checkinTimeInput.value = timeStr;\r\n        checkinTimeInput._flatpickr.setDate(timeStr, true, \"H:i\");\r\n      }\r\n  \r\n      const response = await editRoom(String(roomNumber), { checkInDate: dateStrBK });\r\n      if(response) return window.location.reload();\r\n    } else {\r\n      const checkoutDateInput = ref.current[roomNumber][\"checkoutdate\"];\r\n      const checkoutTimeInput = ref.current[roomNumber][\"checkouttime\"];\r\n  \r\n      if (checkoutDateInput && checkoutDateInput._flatpickr) {\r\n        checkoutDateInput.value = dateStr;\r\n        checkoutDateInput._flatpickr.setDate(dateStr, true, \"d-m-Y\");\r\n      }\r\n  \r\n      if (checkoutTimeInput && checkoutTimeInput._flatpickr) {\r\n        checkoutTimeInput.value = timeStr;\r\n        checkoutTimeInput._flatpickr.setDate(timeStr, true, \"H:i\");\r\n      }\r\n  \r\n      await editRoom(String(roomNumber), { checkOutDate: dateStrBK });\r\n    }\r\n  };\r\n  \r\n\r\n  const calculate = (roomNumber, data) => {\r\n    const ref = data;\r\n    const checkInDate = convertToISODate(ref.current[roomNumber]['checkindate'].value);\r\n    const checkInTime = ref.current[roomNumber]['checkintime'].value;\r\n    const checkOutDate = convertToISODate(ref.current[roomNumber]['checkoutdate'].value);\r\n    const checkOutTime = ref.current[roomNumber]['checkouttime'].value;\r\n\r\n    if (!checkInDate || !checkInTime || !checkOutDate || !checkOutTime) {\r\n      return openModal(<p style={{ textAlign: 'center' }}>Vui lòng nhập đầy đủ thời gian.</p>);\r\n    }\r\n\r\n    const start = new Date(`${checkInDate}T${checkInTime}`);\r\n    const end = new Date(`${checkOutDate}T${checkOutTime}`);\r\n    if (end <= start) {\r\n      return openModal(<p style={{ textAlign: 'center' }}>Thời gian trả phòng cần được thiết lập muộn hơn thời gian nhận phòng để đảm bảo hợp lệ.</p>);\r\n    }\r\n\r\n    let total = 0;\r\n    const notes = [];\r\n    const diffMs = end - start;\r\n    const diffMinutes = Math.ceil(diffMs / 60000);\r\n    const diffHours = Math.ceil(diffMs / 3600000);\r\n    const startHour = start.getHours();\r\n    const endHour = end.getHours();\r\n    const isSameDay = start.toDateString() === end.toDateString();\r\n    const isNightStay = startHour >= 19 && startHour <= 23 && endHour >= 0 && endHour <= 2 && diffHours <= 9;\r\n\r\n    const dataRoom = rooms.find((room) => room.roomNumber === roomNumber);\r\n\r\n    if (isSameDay || isNightStay) {\r\n\r\n      total = dataRoom.firstHour;\r\n      notes.push(`Giờ đầu: ${dataRoom.firstHour.toLocaleString()} VNĐ`);\r\n\r\n      const extraMinutes = diffMinutes - 60;\r\n      const extraHoursCharged = extraMinutes > 0 ? Math.floor((extraMinutes + 45) / 60) : 0;\r\n\r\n      if (extraHoursCharged > 0) {\r\n        total += extraHoursCharged * dataRoom.extraHour;\r\n        notes.push(`Phụ thu ${extraHoursCharged} giờ x ${dataRoom.extraHour.toLocaleString()} VNĐ`);\r\n      }\r\n    } else {\r\n      let surcharge = 0;\r\n      if (startHour >= 6 && startHour <= 12) {\r\n        const surchargeHours = 12 - startHour;\r\n        if (surchargeHours > 0) {\r\n          surcharge += surchargeHours * 20000;\r\n          notes.push(`Phụ thu nhận phòng sớm: ${surchargeHours} giờ x 20,000 VNĐ`);\r\n        }\r\n      }\r\n\r\n      const firstDayEnd = new Date(start);\r\n      firstDayEnd.setDate(firstDayEnd.getDate() + 1);\r\n      firstDayEnd.setHours(12, 0, 0, 0);\r\n\r\n      if (end <= firstDayEnd) {\r\n        total = dataRoom.daily;\r\n        notes.push(`Tính 1 ngày: ${dataRoom.daily.toLocaleString()} VNĐ`);\r\n      } else {\r\n        const lastNoon = new Date(end);\r\n        lastNoon.setHours(12, 0, 0, 0);\r\n        const fullDays = Math.round((lastNoon - firstDayEnd) / 86400000) + 1;\r\n        total = fullDays * dataRoom.daily;\r\n        notes.push(`${fullDays} ngày x ${dataRoom.daily.toLocaleString()} VNĐ`);\r\n      }\r\n\r\n      if (endHour >= 12) {\r\n        const extraHours = endHour - 12;\r\n        if (extraHours > 0) {\r\n          surcharge += extraHours * 20000;\r\n          notes.push(`Phụ thu trả phòng muộn: ${extraHours} giờ x 20,000 VNĐ`);\r\n        }\r\n      }\r\n\r\n      total += surcharge;\r\n    }\r\n\r\n    notes.push(`Thời gian ở thực: ${diffMinutes >= 1440\r\n        ? `${Math.floor(diffMinutes / 1440)} ngày${diffMinutes % 1440\r\n          ? ` ${Math.floor((diffMinutes % 1440) / 60)} giờ ${diffMinutes % 60} phút`\r\n          : ''\r\n        }`\r\n        : `${Math.floor(diffMinutes / 60)} giờ ${diffMinutes % 60} phút`\r\n      }`);\r\n\r\n\r\n\r\n    const objectDatatoSaveHistory = {\r\n      totalAmount: total.toLocaleString(),\r\n      checkInDate: start.toLocaleString(),\r\n      checkOutDate: end.toLocaleString(),\r\n      description: notes.map(note => `<span>${note}</span>`).join('')\r\n    }\r\n\r\n\r\n    const HandleSaveDatatoHistory = async () => {\r\n      ref.current[roomNumber]['checkindate'].value = '';\r\n      ref.current[roomNumber]['checkintime'].value = '';\r\n      ref.current[roomNumber]['checkoutdate'].value = '';\r\n      ref.current[roomNumber]['checkouttime'].value = '';\r\n      deleteRoomData(roomNumber);\r\n      await saveRoomHistory(roomNumber, objectDatatoSaveHistory);\r\n      closeModal();\r\n\r\n    }\r\n\r\n    openModal(\r\n      <div className={cx(\"calculate\")}>\r\n        <h3 className={cx(\"calculate-header\")}>Chi tiết tính tiền</h3>\r\n        <p className={cx(\"room-info\")}><span className={cx(\"title\")}>Phòng:</span> <span>{roomNumber}</span></p>\r\n        <p className={cx(\"check-in-time\")}><span className={cx(\"title\")}>Nhận phòng:</span> <span>{start.toLocaleString()}</span></p>\r\n        <p className={cx(\"check-out-time\")}><span className={cx(\"title\")}>Trả phòng:</span> <span>{end.toLocaleString()}</span></p>\r\n        {notes.map((note, i) => <p className={cx(\"additional-note\")} key={i}><span>{note}</span></p>)}\r\n        <p className={cx(\"total-amount\")}><span>Tổng tiền:</span> <span>{total.toLocaleString()} VNĐ</span></p>\r\n        <div className={cx(\"control\")}>\r\n          <button className={cx(\"button\")} onClick={HandleSaveDatatoHistory}>Lưu dữ liệu</button>\r\n          <button className={cx(\"button\")} onClick={closeModal}>Tạm tính</button>\r\n        </div>\r\n        <div className={cx(\"footer-note\")}>\r\n\r\n          <span>Phần mềm được tạo bởi Hữu Đức</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id={cx(\"room\")}>\r\n      {rooms && rooms.length > 0 ? (\r\n        rooms.map((room) => (\r\n          <Room\r\n            key={room.roomNumber}\r\n            room={room}\r\n            handleInputChange={handleInputChange}\r\n            setCurrentTime={setCurrentTime}\r\n            calculate={calculate}\r\n          />\r\n        ))\r\n      ) : (\r\n        <span >Hiện tại chưa có phòng nào được thêm vào dữ liệu</span>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default RoomList;                    \r\n","import { useModal } from \"./ModalContext\";\r\nimport styles from './modal.module.scss'; // Đảm bảo SCSS của bạn được import ở đây\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\n\r\nconst GlobalModal = () => {\r\n  const { showModal, closeModal, modalContent } = useModal();\r\n\r\n  if (!showModal) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className={cx(\"overlay\")}></div>\r\n      <div className={cx(\"modal-wrapper\")}>\r\n        <div className={`${cx('modal-parent')}`}>\r\n          <div className={`${cx('modal-content')}`} onClick={(e) => e.stopPropagation()}>\r\n            <div onClick={closeModal} className={cx(\"modal-close\")}>x</div>\r\n            {modalContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalModal;","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './App.module.scss';\nimport Header from './layout/Header';\nimport RoomList from './component/RoomDaily/RoomList';\nimport { ModalProvider } from './component/Modal/ModalContext';\nimport GlobalModal from './component/Modal/GlobalModal.js';\n\n\nconst cx = classNames.bind(styles);\n\nfunction App() {\n  return (\n\n    <ModalProvider>\n      <div className={cx('App')}>\n        <Header />\n        <RoomList />\n        <GlobalModal />\n       \n      </div>\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}