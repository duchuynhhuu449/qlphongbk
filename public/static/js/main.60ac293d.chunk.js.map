{"version":3,"sources":["api/index.js","component/dateUtils.js","component/RoomDaily/History/HistoryRoom.js","component/Modal/ModalContext.js","component/RoomDaily/AddRoom/AddRoom.js","component/Telegram/Telegram.js","component/RoomDaily/ListRoomDetail/ListRoomDetail.js","component/Contract/Contract.js","component/VietnamText/Vietnamtext.js","component/VNDFormatter.js","component/RoomMonth/AddRoomMonth/AddRoomMonth.js","component/RoomMonth/AdjustRoom/AdjustRoom.js","component/Bill/Bill.js","component/RoomMonth/PaymentInfo/TotalPaymentInfo.js","component/RoomMonth/PaymentInfo/Menu.js","component/RoomMonth/PaymentInfo/PaymentInfo.js","component/RoomMonth/Room.js","component/WaterManager/Inventory.js","component/WaterManager/ListWater.js","layout/Header/index.js","component/debounce.js","component/RoomDaily/Room.js","component/RoomDaily/RoomList.js","component/Modal/GlobalModal.js","App.js","reportWebVitals.js","index.js","component/RoomMonth/PaymentInfo/PaymentInfo.module.scss","component/RoomDaily/Room.module.scss","App.module.scss","layout/Header/Header.module.scss","component/RoomDaily/History/History.module.scss","component/RoomDaily/ListRoomDetail/ListRoomDetail.module.scss","component/RoomDaily/AddRoom/AddRoom.module.scss","component/Telegram/Telegram.module.scss","component/RoomMonth/Room.module.scss","component/RoomMonth/AddRoomMonth/AddRoomMonth.module.scss","component/RoomMonth/AdjustRoom/AdjustRoom.module.scss","component/Bill/Bill.module.scss","component/RoomMonth/PaymentInfo/TotalPaymentInfo.module.scss","component/WaterManager/ListWater.module.scss","component/WaterManager/Inventory.module.scss","component/Modal/modal.module.scss"],"names":["api","axios","create","baseURL","timeout","handleRequest","async","promise","errorMessage","data","error","_error$response","_error$response$data","message","response","Error","editRoom","room","adjust","post","roomNumber","newDetails","fetchRoomsList","get","localStorage","setItem","JSON","stringify","fetchHistory","type","url","GetAllRoomsMonth","GetUpdateRoom","id","object","put","convertToISODate","dateStr","test","day","month","year","split","formatDateValue","datetime","date","formatTimeValue","time","substring","CurrentDate","today","Date","pad","n","toString","padStart","getDate","getMonth","getFullYear","cx","classNames","bind","styles","HistoryRoom","history","setHistory","useState","currentPage","setCurrentPage","useEffect","getHistory","sortedHistory","sort","a","b","checkOutDate","checkInDate","loadHistory","console","log","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","flatpickr","enableTime","noCalendar","dateFormat","time_24hr","minuteIncrement","maxDate","_jsxs","children","_jsx","className","map","item","index","totalAmount","dangerouslySetInnerHTML","__html","description","onClick","idToDelete","status","updatedHistory","filter","_id","handleDeleteItem","colSpan","style","textAlign","padding","fontStyle","prevPage","disabled","nextPage","ModalContext","createContext","ModalProvider","_ref","showModal","setShowModal","modalContent","setModalContent","Provider","value","openModal","content","closeModal","useModal","useContext","AddRoom","setData","dailyprice","firstHour","extraHour","setMessage","handleAddRoom","daily","onChange","e","prev","target","required","Form2","_Fragment","src","alt","Form1","Telegram","props","ListRoomDetail","ListRoom","setListroom","sortedRooms","handleAjustRoomDaily","input","prompt","alert","key","firsthour","extrahour","err","String","toLocaleString","roomID","deleted","window","location","reload","handleEditRoom","generateContract","fetch","ok","blob","arrayBuffer","byteLength","zip","PizZip","doc","Docxtemplater","paragraphLoop","linebreaks","render","out","getZip","generate","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","convertNumberToVietnameseText","number","ChuSo","docSo3ChuSo","baso","tram","floor","chuc","donvi","ketQua","trim","so","reverse","join","arr","i","push","chu","parseInt","toVietnamese","VNDFormatter","isNaN","Number","AddRoomMonth","deposit","setDeposit","typeofWater","setTypeofWater","contractData","setContractData","NGAY","THANG","THOIGIANBATDAU","DIENBANGIAO","NUOCBANGIAO","hovaten","SoPhong","GiaPhong","sinhhoatchung","chisodiencu","chisodienmoi","chisonuoclanhcu","chisonuoclanhmoi","chisonuocnongcu","chisonuocnongmoi","ghichu","loainuoc","songuoikhoang","nguoi","giakhoangnuoc","setTimeout","forEach","formattedValue","rawValue","replace","handleDeposit","HOVATEN","cccd","CCCD","NAMSINH","noithuongtru","THUONGTRU","sdt","SODIENTHOAI","nguoio","DANHSACHNGUOIO","rows","placeholder","SOPHONG","TIENBANGSO","TIENBANGCHU","sothang","THOIGIANKETTHUC","monthsToAdd","startDate","newDate","maxDay","setDate","min","formatDate","calculateEndDate","sonam","AdjustRoomMonth","handleUpdateRoom","Bill","useParams","contentRef","useRef","sliderRef","setWidth","handleKeyDown","current","slickPrev","slickNext","confirm","handleDownloadAll","addEventListener","removeEventListener","filtered","GetRoom","originalWidth","width","promises","originalPadding","imgData","html2canvas","scale","useCORS","toDataURL","link","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","prevArrow","nextArrow","centerMode","centerPadding","ref","Slider","dientieuthu","nuoctieuthu","dieukien1","dieukien2","coastNuoc","coastDien","total","Sophong","el","TotalPaymentInfo","onlyPrice","setOnlyPrice","filteredRooms","totalElectric","totalWater","totalElectricUsed","totalWaterUsed","roomCount","totalElectricCount","totalWaterCount","totalRoom","Room","Menu","Total","only","position","HandleRefresh","handleBack","PayMentInfo","choice","setChoice","checked","FaPrint","setListRoom","getListRoom","HandleAdjustRoom","includes","parts","parseFloat","handleDeleteRoom","deleteRoomV2","list","handleOpenAjust","FaEdit","FaTrash","Header","_tempDates3","_tempDates4","handleInputChange","setCurrentTime","calculate","debounce","useDebounceHandler","debounceTimers","newVal","oldVal","callback","delay","arguments","undefined","clearTimeout","tempDates","setTempDates","checkDateRef","originalRef","handleChange","_originalRef$current","newValue","originalValue","_tempDates","_tempDates2","initFlatpickr","refs","checkindate","checkoutdate","checkintime","checkouttime","setRef","handleCalculate","RoomList","rooms","setRooms","depositRef","deposit2Ref","loadRooms","now","toLocaleDateString","timeStr","getHours","getMinutes","dateStrBK","convertToStandardDateFormat","formattedDate","formattedDateTime","checkinDateInput","checkinTimeInput","_flatpickr","checkoutDateInput","checkoutTimeInput","checkInTime","checkOutTime","start","end","notes","diffMs","diffMinutes","diffHours","startHour","endHour","isSameDay","toDateString","isNightStay","dataRoom","find","holidays","surcharge","holidaySurcharge","extraMinutes","extraHoursCharged","temp","setMinutes","totalExtraHourSurcharge","holidayHours","currentStr","isHoliday","setHours","surchargeHours","firstDayEnd","lastNoon","fullDays","round","extraHours","holidayCounts","endDate","getHolidayDays","name","objectDatatoSaveHistory","note","HandleSaveDatatoHistory","saveRoomHistory","numberValue","formatted","innerText","GlobalModal","stopPropagation","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","React","StrictMode","BrowserRouter","module","exports"],"mappings":"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","file":"static/js/main.60ac293d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3000\",\r\n  timeout: 10000,\r\n});\r\n\r\n// Hàm xử lý promise chung có catch lỗi\r\nconst handleRequest = async (promise, errorMessage) => {\r\n  try {\r\n    const res = await promise;\r\n    return res.data;\r\n  } catch (error) {\r\n    const message = error.response?.data?.message || errorMessage || \"Có lỗi xảy ra!\";\r\n    throw new Error(message);\r\n  }\r\n};\r\n\r\n// Các API dưới đây:\r\n\r\nconst editRoom = (room, adjust) => {\r\n  return handleRequest(\r\n    api.post('/api/edit-room', {\r\n      roomNumber: room,\r\n      newDetails: adjust\r\n    }),\r\n    \"Lỗi khi chỉnh sửa phòng\"\r\n  );\r\n};\r\n\r\nconst addRoom = (object) => {\r\n  return handleRequest(\r\n    api.post('/api/addroom', {\r\n      roomNumber: object.roomNumber,\r\n      daily: object.dailyprice,\r\n      firstHour: object.firstHour,\r\n      extraHour: object.extraHour,\r\n      checkInDate: \"\",\r\n      checkOutDate: \"\",\r\n    }),\r\n    \"Lỗi khi thêm phòng\"\r\n  );\r\n};\r\n\r\nconst saveRoomHistory = (room, adjust) => {\r\n  return handleRequest(\r\n    api.post('/api/history', {\r\n      roomNumber: room,\r\n      totalAmount: adjust.totalAmount,\r\n      checkInDate: adjust.checkInDate,\r\n      checkOutDate: adjust.checkOutDate,\r\n      description: adjust.description,\r\n    }),\r\n    \"Lỗi khi lưu lịch sử phòng\"\r\n  );\r\n};\r\n\r\nconst deleteRoomData = (room) => {\r\n  return handleRequest(\r\n    api.get(`/api/reset/${room}`),\r\n    \"Lỗi khi reset phòng\"\r\n  );\r\n};\r\n\r\nconst fetchRoomsList = async () => {\r\n  const data = await handleRequest(\r\n    api.get(\"/api/rooms\"),\r\n    \"Lỗi khi lấy danh sách phòng\"\r\n  );\r\n  if (data) {\r\n    localStorage.setItem(\"rooms\", JSON.stringify(data));\r\n  }\r\n  return data;\r\n};\r\n\r\nconst fetchHistory = (type) => {\r\n  const url = type === 'all' ? \"/api/history/all\" : `/api/history/${type}`;\r\n  return handleRequest(api.get(url), \"Lỗi khi lấy lịch sử phòng\");\r\n};\r\n\r\nconst fetchWaterList = () => {\r\n  return handleRequest(\r\n    api.get(\"/api/water\"),\r\n    \"Lỗi khi lấy danh sách nước\"\r\n  );\r\n};\r\n\r\nconst updateWater = (object) => {\r\n  return handleRequest(\r\n    api.post('/api/update-water', {\r\n      tenNuoc: object.tenNuoc,\r\n      soLuong: Number(object.soLuong) || 0,\r\n      nhap: Number(object.nhap) || 0,\r\n    }),\r\n    \"Lỗi khi cập nhật nước\"\r\n  );\r\n};\r\n\r\nconst TestInventory = () => {\r\n  return handleRequest(\r\n    api.get(\"/api/kiemhangthuall\"),\r\n    \"Lỗi khi kiểm hàng thử\"\r\n  );\r\n};\r\n\r\nconst TestInventory2 = async () => {\r\n  const check = window.confirm(\"Bạn có chắc muốn tạo mới dữ liệu không?\\nHệ thống sẽ tự động lấy Số lượng cuối và Chuyển về lại Số lượng Đầu\");\r\n  if (!check) return null;\r\n  \r\n  return handleRequest(\r\n    api.get(\"/api/resetwt\"),\r\n    \"Lỗi khi reset số lượng nước\"\r\n  );\r\n};\r\n\r\nconst GetAllRoomsMonth = () => {\r\n  return handleRequest(\r\n    api.get(\"/api/getallroom/v2\"),\r\n    \"Lỗi khi tải danh sách phòng tháng\"\r\n  );\r\n};\r\n\r\nconst GetUpdateRoom = (id, object) => {\r\n  return handleRequest(\r\n    api.put(`/api/update/${id}/v2`, object),\r\n    \"Lỗi khi cập nhật phòng\"\r\n  );\r\n};\r\n\r\nconst addRoomV2 = (object) => {\r\n  return handleRequest(\r\n    api.post(`/api/addroom/v2`, {\r\n      hovaten: object.hovaten,\r\n      SoPhong: object.SoPhong,\r\n      GiaPhong: object.GiaPhong,\r\n      chisodiencu: object.chisodiencu || 0,\r\n      chisodienmoi: 0,\r\n      chisonuoclanhcu: object.chisonuoclanhcu || 0,\r\n      chisonuoclanhmoi: 0,\r\n      chisonuocnongcu: object.chisonuocnongcu || 0,\r\n      chisonuocnongmoi: 0,\r\n      sinhhoatchung: object.sinhhoatchung || 0,\r\n      ghichu: \"Chưa có ghi chú\",\r\n      loainuoc: object.loainuoc,\r\n      songuoikhoang: object.nguoi || 0,\r\n      giakhoangnuoc: 90000,\r\n    }),\r\n    \"Lỗi khi thêm phòng mới\"\r\n  );\r\n};\r\n\r\nconst deleteRoomV2 = async (id) => {\r\n  const check = window.confirm(\"Bạn có chắc muốn xóa không?\");\r\n  if (!check) return null;\r\n\r\n  return handleRequest(\r\n    api.get(`/api/delete/${id}/v2`),\r\n    \"Lỗi khi xóa phòng\"\r\n  );\r\n};\r\n\r\n// Xuất toàn bộ\r\nexport { \r\n  api, \r\n  editRoom, \r\n  saveRoomHistory, \r\n  deleteRoomData, \r\n  fetchRoomsList, \r\n  fetchHistory, \r\n  addRoom, \r\n  fetchWaterList, \r\n  updateWater, \r\n  TestInventory, \r\n  TestInventory2, \r\n  GetAllRoomsMonth, \r\n  GetUpdateRoom, \r\n  addRoomV2, \r\n  deleteRoomV2 \r\n};\r\n","// Hàm lấy giờ Việt Nam\r\nexport function getVietnamTime() {\r\n  const now = new Date();\r\n  const utc = now.getTime() + now.getTimezoneOffset() * 60000;\r\n  return new Date(utc + 7 * 3600000);\r\n}\r\n\r\n// Hàm định dạng ngày theo múi giờ Việt Nam\r\nexport function formatVietnamDate(dateObj) {\r\n  console.log(\"du lieu nhan duoc\", dateObj);\r\n  const day = String(dateObj.getDate()).padStart(2, \"0\");\r\n  const month = String(dateObj.getMonth() + 1).padStart(2, \"0\");\r\n  const year = dateObj.getFullYear();\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport function convertToISODate(dateStr) {\r\n  if (!/^\\d{2}-\\d{2}-\\d{4}$/.test(dateStr)) return \"\";\r\n  const [day, month, year] = dateStr.split(\"-\");\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport const convertToStandardDateFormat = (dateStr, timeStr) => {\r\n  // Tách ngày thành ngày, tháng, năm\r\n  const [day, month, year] = dateStr.split(\"/\");\r\n\r\n  // Chuyển đổi thành định dạng yyyy-mm-dd\r\n  const formattedDate = `${day.padStart(2, \"0\")}-${month.padStart(\r\n    2,\r\n    \"0\"\r\n  )}-${year}`;\r\n\r\n  let formattedDateTime;\r\n  // Kết hợp ngày với giờ\r\n  if (timeStr) {\r\n    formattedDateTime = `${formattedDate} ${timeStr}`;\r\n  } else {\r\n    formattedDateTime = `${formattedDate}`;\r\n  }\r\n\r\n  return formattedDateTime;\r\n};\r\n\r\nexport const formatDateValue = (datetime) => {\r\n  if (!datetime) return \"\";\r\n  const [year, date, day] = datetime.split(\" \")[0].split(\"-\"); // Chia chuỗi theo dấu \"-\"\r\n\r\n  return day + \"-\" + date + \"-\" + year; // Định dạng lại thành d-m-Y\r\n};\r\n\r\n// Lấy giờ định dạng hh:mm\r\nexport const formatTimeValue = (datetime) => {\r\n  if (!datetime) return \"\";\r\n  const [, time] = datetime.split(\" \");\r\n  return time?.substring(0, 5) || \"\";\r\n};\r\n\r\nexport const CurrentDate = () => {\r\n  const today = new Date();\r\n\r\n  // Hàm thêm số 0 phía trước nếu < 10\r\n  const pad = (n) => n.toString().padStart(2, \"0\");\r\n\r\n  const day = pad(today.getDate());\r\n  const month = pad(today.getMonth() + 1);\r\n  const year = today.getFullYear();\r\n\r\n  const formattedDate = `${day}/${month}/${year}`;\r\n\r\n  return formattedDate;\r\n};\r\n\r\nexport const CalculateEndDate = (monthsToAdd) => {\r\n  // Định dạng ngày DD/MM/YYYY\r\n  const formatDate = (date) => {\r\n    const pad = (n) => n.toString().padStart(2, \"0\");\r\n    return `${pad(date.getDate())}/${pad(date.getMonth() + 1)}/${date.getFullYear()}`;\r\n  };\r\n\r\n  const calculateEndDate = (monthsToAdd) => {\r\n    const startDate = new Date(); // Ngày bắt đầu\r\n    const day = startDate.getDate();\r\n    const month = startDate.getMonth();\r\n    const year = startDate.getFullYear();\r\n\r\n    // Tạo ngày mới cộng tháng\r\n    const newMonth = month + monthsToAdd;\r\n    const newDate = new Date(year, newMonth, 1); // Tạm thời đặt là ngày đầu tháng mới\r\n\r\n    // Tính số ngày tối đa trong tháng mới\r\n    const maxDay = new Date(newDate.getFullYear(), newDate.getMonth() + 1, 0).getDate();\r\n\r\n    // Nếu ngày bắt đầu lớn hơn số ngày của tháng mới => dùng ngày cuối tháng\r\n    newDate.setDate(Math.min(day, maxDay));\r\n\r\n    return formatDate(newDate);\r\n  };\r\n\r\n  return calculateEndDate(monthsToAdd);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./History.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { fetchHistory } from \"../../../api\";\r\n\r\nimport flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport { formatDateValue, formatTimeValue } from \"../../dateUtils\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction HistoryRoom() {\r\n  const [history, setHistory] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  useEffect(() => {\r\n    const loadHistory = async () => {\r\n      const getHistory = await fetchHistory('all');\r\n      const sortedHistory = await getHistory.sort((a, b) => new Date(b.checkOutDate) - new Date(a.checkInDate));\r\n      setHistory(sortedHistory);\r\n    };\r\n\r\n    loadHistory();\r\n  }, []);\r\n  console.log(history)\r\n\r\n  // Tính toán dữ liệu cho mỗi trang\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = history.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // Chuyển sang trang kế tiếp\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages()) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  // Chuyển sang trang trước\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // Tính tổng số trang\r\n  const totalPages = () => {\r\n    return Math.ceil(history.length / itemsPerPage);\r\n  };\r\n\r\n\r\n  const handleDeleteItem = async (idToDelete) => {\r\n    try {\r\n      // Gửi yêu cầu xóa đến backend\r\n      const response = await fetchHistory(idToDelete);\r\n\r\n      // Kiểm tra nếu xóa thành công (tùy vào response từ backend)\r\n      if (response.status === 200) {\r\n        // Xóa phần tử khỏi state history\r\n        const updatedHistory = history.filter(item => item._id !== idToDelete);\r\n        setHistory(updatedHistory);\r\n      } else {\r\n        console.error(\"Không thể xóa lịch sử, vui lòng thử lại.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi xóa lịch sử:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n      flatpickr(`#startTime`, {\r\n        enableTime: true,\r\n        noCalendar: true,\r\n        dateFormat: \"H:i\",\r\n        time_24hr: true,\r\n        minuteIncrement: 60,\r\n  \r\n      });\r\n      flatpickr(`#endTime`, {\r\n        enableTime: true,\r\n        noCalendar: true,\r\n        dateFormat: \"H:i\",\r\n        time_24hr: true,\r\n        minuteIncrement: 60,\r\n      });\r\n  \r\n  \r\n      flatpickr(`#startDate`, {\r\n        dateFormat: \"d-m-Y\", // <-- Định dạng ngày/tháng/năm đúng\r\n        maxDate: \"today\",     // Chặn các ngày sau ngày hiện tại\r\n      });\r\n  \r\n      flatpickr(`#endDate`, {\r\n        dateFormat: \"d-m-Y\", // <-- Định dạng ngày/tháng/năm đúng\r\n      });\r\n  \r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={cx(\"title-table\")}>Lịch Sử Thuê Phòng</h1>\r\n      \r\n      <table className={cx(\"history-table\")}>\r\n        <thead>\r\n          <tr>\r\n            <th>Số Phòng</th>\r\n            <th>Ngày Vào</th>\r\n            <th>Ngày Ra</th>\r\n            <th>Tổng Tiền</th>\r\n            <th>Ghi Chú</th>\r\n            <th>Hành Động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className={cx(\"data\")}>\r\n          {currentItems && currentItems.length > 0 ? (\r\n            currentItems.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.roomNumber}</td>\r\n                <td>\r\n                  Ngày {formatDateValue(item.checkInDate)} {formatTimeValue(item.checkInDate).split(\":\")[0]} giờ {formatTimeValue(item.checkInDate).split(\":\")[1]} phút\r\n                </td>\r\n\r\n                <td>\r\n                  Ngày {formatDateValue(item.checkOutDate)} {formatTimeValue(item.checkOutDate).split(\":\")[0]} giờ {formatTimeValue(item.checkOutDate).split(\":\")[1]} phút\r\n                </td>\r\n                <td>{item.totalAmount}</td>\r\n                <td dangerouslySetInnerHTML={{ __html: item.description }} />\r\n                <td><button onClick={() => handleDeleteItem(item._id)}>Xóa</button></td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>\r\n                Không có bảng nào được ghi\r\n              </td>\r\n            </tr>\r\n          )}\r\n\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className={cx(\"pagination\")}>\r\n        <div className={cx(\"notification\")}><span>Trang {currentPage} of {totalPages()}</span></div>\r\n        <div className={cx(\"controls\")}>\r\n          <button onClick={prevPage} disabled={currentPage === 1}>\r\n            Trang trước\r\n          </button>\r\n          <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n            Trang sau\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryRoom;\r\n","// src/context/ModalContext.js\r\nimport { createContext, useState, useContext } from \"react\";\r\n\r\nconst ModalContext = createContext();\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(null);\r\n\r\n  const openModal = (content) => {\r\n    setModalContent(content);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setModalContent(null);\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ showModal, modalContent, openModal, closeModal }}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useModal = () => useContext(ModalContext);\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./AddRoom.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { addRoom } from \"api\";\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction AddRoom() {\r\n\r\n  const [data, setData] = useState({\r\n    roomNumber: \"\",\r\n    dailyprice: \"\",\r\n    firstHour: \"\",\r\n    extraHour: \"\"\r\n  });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleAddRoom = async (event) => {\r\n    \r\n  \r\n    const { roomNumber, dailyprice, firstHour, extraHour } = data;\r\n  \r\n    if (!roomNumber || !dailyprice || !firstHour || !extraHour) {\r\n      setMessage(\"Vui lòng nhập đầy đủ thông tin!\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await addRoom(data);\r\n      if (response) {\r\n        setMessage(\"Thêm phòng thành công!\");\r\n        // Reset form nếu cần\r\n        // setData({ roomNumber: '', dailyprice: '', firstHour: '', extraHour: '', ... });\r\n      }\r\n    } catch (error) {\r\n      console.error(error); // log ra để dễ debug\r\n      setMessage(error.message || \"Có lỗi xảy ra khi thêm phòng!\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={cx(\"container\")}>\r\n    <h2 className={cx(\"title\")}>Thêm Phòng Mới</h2>\r\n    <form className={cx(\"form\")} id=\"roomForm\">\r\n      \r\n      <div className={cx(\"row\")}>\r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Số phòng:</label>\r\n          <input\r\n            value={data.roomNumber || ''}\r\n            onChange={(e) => setData((prev) => ({ ...prev, roomNumber: e.target.value }))}\r\n            type=\"number\"\r\n            id=\"roomNumber\"\r\n            required\r\n            className={cx(\"input\")}\r\n          />\r\n        </div>\r\n  \r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Giá phòng ngày:</label>\r\n          <input\r\n            value={data.dailyprice || ''}\r\n            onChange={(e) => setData((prev) => ({ ...prev, dailyprice: e.target.value }))}\r\n            type=\"number\"\r\n            id=\"daily\"\r\n            required\r\n            className={cx(\"input\")}\r\n          />\r\n        </div>\r\n      </div>\r\n  \r\n      <div className={cx(\"row\")}>\r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Giờ đầu tiên:</label>\r\n          <input\r\n            value={data.firstHour || ''}\r\n            onChange={(e) => setData((prev) => ({ ...prev, firstHour: e.target.value }))}\r\n            type=\"number\"\r\n            id=\"firstHour\"\r\n            required\r\n            className={cx(\"input\")}\r\n          />\r\n        </div>\r\n  \r\n        <div className={cx(\"formGroup\")}>\r\n          <label className={cx(\"label\")}>Giá thêm giờ:</label>\r\n          <input\r\n            value={data.extraHour || ''}\r\n            onChange={(e) => setData((prev) => ({ ...prev, extraHour: e.target.value }))}\r\n            type=\"number\"\r\n            id=\"extraHour\"\r\n            required\r\n            className={cx(\"input\")}\r\n          />\r\n        </div>\r\n      </div>\r\n  \r\n      <div className={cx(\"control\")}>\r\n        <button type=\"button\" onClick={() => handleAddRoom()} className={cx(\"button\")}>Thêm Phòng</button>\r\n      </div>\r\n    </form>\r\n    <p id=\"message\" className={cx(\"message\")}>{message}</p>\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default AddRoom;","import React from \"react\";\r\nimport styles from \"./Telegram.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Form2 = () => {\r\n  return (\r\n    <>\r\n      <div className={cx(\"container\")}>\r\n      <div className={cx(\"image-wrapper\")}>\r\n        <img\r\n          src=\"./telegram.png\"\r\n          alt=\"Mã QR Telegram\"\r\n          className={cx(\"image\")}\r\n        />\r\n      </div>\r\n        <span className={cx(\"header\")}>\r\n          📲{\" \"}\r\n          <strong>\r\n            Chào mừng bạn đến với bot tính tiền phòng HataHomeStay trên Telegram!\r\n          </strong>\r\n        </span>\r\n\r\n        <span className={cx(\"instruction\")}>\r\n          Bot này được tạo ra để giúp bạn gửi chỉ số điện, nước hàng tháng một\r\n          cách <strong>nhanh chóng</strong> và <strong>chính xác</strong>. Dưới\r\n          đây là hướng dẫn chi tiết:\r\n        </span>\r\n\r\n        <span className={cx(\"step\")}>\r\n          🔹 <strong>Bước 1:</strong> Mở ứng dụng <em>Quét mã QR</em> trên điện\r\n          thoại của bạn.\r\n        </span>\r\n\r\n        <span className={cx(\"step\")}>\r\n          🔹 <strong>Bước 2:</strong> Quét mã QR hiển thị trên màn hình hoặc tờ\r\n          hướng dẫn. Telegram sẽ tự động mở bot có tên <em>HATAHOMESTAY_BOT</em>\r\n          .\r\n        </span>\r\n\r\n        <span className={cx(\"step\")}>\r\n          🔹 <strong>Bước 3:</strong> Nhấn nút <code>Start</code> để bắt đầu sử\r\n          dụng bot.\r\n        </span>\r\n\r\n        <span className={cx(\"instruction\")}>\r\n          Sau khi khởi động bot, bạn có thể nhập số phòng bằng cách gửi\r\n          lệnh theo mẫu:\r\n        </span>\r\n\r\n        <span className={cx(\"example\")}>\r\n          <code>/001</code>\r\n        </span>\r\n\r\n        <span className={cx(\"detail\")}>\r\n          Trong đó <code>001</code> là số phòng. Khi bạn gửi lệnh này:\r\n          <br />– Bot sẽ kiểm tra xem phòng đó có tồn tại hay không.\r\n          <br />– Nếu phòng <strong>chưa có thời gian check-in</strong>, bot sẽ\r\n          tự động cập nhật thời gian và thông báo cho bạn và chỉ cần gửi lại lệnh cũ hệ thống sẽ tự động tính toán cho bạn.\r\n          <br />– Nếu phòng <strong>đã có thời gian</strong>, bot sẽ tự động\r\n          tính tiền dựa trên số liệu đã có trong danh sách và gửi lại thông tin thanh toán chính xác.\r\n          <br />– Nếu muốn reset thời gian nhận phòng chỉ cần gửi lệnh <strong>/sophong r, ví dụ: /001 r</strong>, lệnh này hệ thống sẽ tự động xóa thời gian checkin và sẵn sàng chờ lệnh tiếp theo.\r\n        </span>\r\n\r\n        <span className={cx(\"footer\")}>\r\n        Bot HataHomeStay được phát triển bởi <strong>Hữu Đức</strong>. Cảm ơn\r\n        bạn đã sử dụng!\r\n      </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Form1 = () => {\r\n  return (\r\n    <div className={cx(\"container\")}>\r\n      <div className={cx(\"image-wrapper\")}>\r\n        <img\r\n          src=\"./telegram.png\"\r\n          alt=\"Mã QR Telegram\"\r\n          className={cx(\"image\")}\r\n        />\r\n      </div>\r\n\r\n      <span className={cx(\"header\")}>\r\n        📲{\" \"}\r\n        <strong>\r\n          Chào mừng bạn đến với bot điện nước HataHomeStay trên Telegram!\r\n        </strong>\r\n      </span>\r\n\r\n      <span className={cx(\"intro\")}>\r\n        Bot này giúp bạn gửi chỉ số điện, nước hàng tháng dễ dàng và chính xác.\r\n        Dưới đây là hướng dẫn chi tiết nhé!\r\n      </span>\r\n\r\n      <span className={cx(\"spacer\")} />\r\n\r\n      <span className={cx(\"step\")}>\r\n        <strong>Bước 1:</strong> Dùng điện thoại mở ứng dụng{\" \"}\r\n        <strong>Quét mã QR</strong>.\r\n      </span>\r\n\r\n      <span className={cx(\"step\")}>\r\n        <strong>Bước 2:</strong> Quét mã QR hiển thị trên màn hình hoặc tờ hướng\r\n        dẫn.\r\n      </span>\r\n\r\n      <span className={cx(\"instruction\")}>\r\n        Sau khi quét xong, Telegram sẽ mở ra bot có tên{\" \"}\r\n        <em>HATAHOMESTAY_BOT</em>.\r\n      </span>\r\n\r\n      <span className={cx(\"step\")}>\r\n        <strong>Bước 3:</strong> Nhấn nút <code>Start</code> để bắt đầu sử dụng\r\n        bot.\r\n      </span>\r\n\r\n      <span className={cx(\"instruction\")}>\r\n        Sau khi nhấn Start, bạn có thể bắt đầu nhập chỉ số điện nước mỗi tháng.\r\n      </span>\r\n\r\n      <span className={cx(\"step\")}>\r\n        <strong>Bước 4:</strong> Gửi thông tin theo đúng mẫu sau:\r\n      </span>\r\n\r\n      <span className={cx(\"example\")}>\r\n        <code>001 15 223 1523</code>\r\n      </span>\r\n\r\n      <span className={cx(\"note\")}>📝 Giải thích:</span>\r\n      <span className={cx(\"detail\")}>\r\n        - <code>001</code>: Số phòng\r\n        <br />- <code>15</code>: Số nước nóng mới\r\n        <br />- <code>223</code>: Số nước lạnh mới\r\n        <br />- <code>1523</code>: Số điện mới\r\n      </span>\r\n      <span className={cx(\"step\")}>\r\n        ✅ Bạn có thể gửi nhiều phòng cùng lúc bằng cách xuống dòng, ví dụ:\r\n      </span>\r\n\r\n      <span className={cx(\"example\")}>\r\n        <code>001 15 223 1523</code>\r\n        <br />\r\n        <code>002 14 210 1490</code>\r\n        <br />\r\n        <code>003 12 190 1400</code>\r\n      </span>\r\n\r\n      <span className={cx(\"instruction\")}>\r\n        Mỗi dòng là thông tin của 1 phòng. Nhớ nhập đúng thứ tự nhé!\r\n      </span>\r\n\r\n      <span className={cx(\"response\")}>\r\n        Sau khi gửi, bot sẽ phản hồi như: <em>\"Đã cập nhật cho phòng 001\"</em>,\r\n        \"phòng 002\", v.v...\r\n      </span>\r\n\r\n      <span className={cx(\"instruction\")}>\r\n        Bot sẽ tự động lưu lại. Bạn không cần nhập lại hay lo quên!\r\n      </span>\r\n\r\n      <span className={cx(\"step\")}>\r\n        <strong>Bước 5:</strong> Quay lại trang danh sách phòng trên hệ thống.\r\n      </span>\r\n\r\n      <span className={cx(\"instruction\")}>\r\n        Các chỉ số vừa nhập sẽ được cập nhật tự động. Bạn có thể kiểm tra lại và\r\n        tạo hóa đơn ngay.\r\n      </span>\r\n\r\n      <span className={cx(\"spacer\")} />\r\n\r\n      <span className={cx(\"footer\")}>\r\n        Bot HataHomeStay được phát triển bởi <strong>Hữu Đức</strong>. Cảm ơn\r\n        bạn đã sử dụng!\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nfunction Telegram({ props }) {\r\n  return (\r\n    <>\r\n      {props === 1 && <Form1 />}\r\n      {props === 2 && <Form2 />}\r\n      {props === \"all\" && (\r\n        <>\r\n          <Form1 />\r\n          <Form2 />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Telegram;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./ListRoomDetail.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { fetchRoomsList } from \"../../../api\";\r\nimport { editRoom } from \"api\";\r\nimport { useModal } from \"component/Modal/ModalContext\";\r\nimport AddRoom from \"../AddRoom/AddRoom\";\r\nimport HistoryRoom from \"../History/HistoryRoom\";\r\nimport Telegram from \"component/Telegram/Telegram\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction ListRoomDetail() {\r\n  const { openModal } = useModal();\r\n\r\n  const [ListRoom, setListroom] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const loadHistory = async () => {\r\n    const getRooms = await fetchRoomsList();\r\n    const sortedRooms = getRooms.sort((a, b) => a.roomNumber - b.roomNumber);\r\n    setListroom(sortedRooms);\r\n  };\r\n\r\n  useEffect(() => {\r\n  \r\n    loadHistory();\r\n  }, []);\r\n\r\n  // Tính toán dữ liệu cho mỗi trang\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = ListRoom.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // Chuyển sang trang kế tiếp\r\n  const nextPage = () => {\r\n    if (currentPage < totalPages()) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  // Chuyển sang trang trước\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // Tính tổng số trang\r\n  const totalPages = () => {\r\n    return Math.ceil(ListRoom.length / itemsPerPage);\r\n  };\r\n\r\n  //   const handleDeleteItem = async (idToDelete) => {\r\n  //     try {\r\n  //       // Gửi yêu cầu xóa đến backend\r\n  //       const response = await fetchHistory(idToDelete);\r\n\r\n  //       // Kiểm tra nếu xóa thành công (tùy vào response từ backend)\r\n  //       if (response.status === 200) {\r\n  //         // Xóa phần tử khỏi state history\r\n  //         const updatedHistory = history.filter(item => item._id !== idToDelete);\r\n  //         setHistory(updatedHistory);\r\n  //       } else {\r\n  //         console.error(\"Không thể xóa lịch sử, vui lòng thử lại.\");\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(\"Lỗi khi xóa lịch sử:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  const handleEditRoom = async (roomID) => {\r\n    const response = await editRoom(roomID, { deleted: true });\r\n    if (response) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleOpenAddRoom = () => {\r\n    openModal(<AddRoom />);\r\n  };\r\n\r\n  const handleHistoryRoom = () => {\r\n    openModal(<HistoryRoom />);\r\n  };\r\n\r\n  const handleOpenTelegram = () => {\r\n    openModal(<Telegram props={2} />);\r\n  };\r\n\r\n  const handleAjustRoomDaily = async (room, type) => {\r\n    try {\r\n      const input = prompt(\"Vui lòng nhập số tiền cần chỉnh sửa\");\r\n      if (!input) {\r\n        alert(\"Bạn chưa nhập số tiền!\");\r\n        return;\r\n      }\r\n    \r\n      const validTypes = {\r\n        daily: \"daily\",\r\n        firsthour: \"firstHour\",\r\n        extrahour: \"extraHour\",\r\n      };\r\n    \r\n      const key = validTypes[type];\r\n      if (!key) {\r\n        alert(\"Không có sự lựa chọn nào hợp lệ\");\r\n        return;\r\n      }\r\n    \r\n      const object = { [key]: input };\r\n      const response = await editRoom(room, object);\r\n    \r\n      if (response) {\r\n        alert(\"Cập nhật thành công\");\r\n        loadHistory();\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Lỗi khi cập nhật:\", err);\r\n      alert(\"Đã xảy ra lỗi khi cập nhật\");\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={cx(\"title-table\")}>Danh sách phòng cụ thể</h1>\r\n      <div className={cx(\"control\")}>\r\n        <button onClick={(e) => handleOpenAddRoom()} className={cx(\"add-room\")}>\r\n          Thêm phòng\r\n        </button>\r\n        <button\r\n          onClick={(e) => handleOpenTelegram()}\r\n          className={cx(\"telegram\")}\r\n        >\r\n          Điều khiển bot qua telegram\r\n        </button>\r\n      </div>\r\n      <table className={cx(\"history-table\")}>\r\n        <thead>\r\n          <tr>\r\n            <th>Số Phòng</th>\r\n            <th>Giá phòng</th>\r\n            <th>Lịch sử thuê</th>\r\n            <th>Hành động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className={cx(\"data\")}>\r\n          {currentItems && currentItems.length > 0 ? (\r\n            currentItems.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>Phòng: {String(item.roomNumber).padStart(3, \"0\")}</td>\r\n                <td>\r\n                  <span>\r\n                    Giá phòng ngày: {item.daily.toLocaleString()} VNĐ{\" \"}\r\n                    <button\r\n                      onClick={(e) =>\r\n                        handleAjustRoomDaily(item.roomNumber, \"daily\")\r\n                      }\r\n                      className={cx(\"plus-button\")}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </span>\r\n                  <span>\r\n                    Giá phòng giờ đầu: {item.firstHour.toLocaleString()} VNĐ{\" \"}\r\n                    <button\r\n                      onClick={(e) =>\r\n                        handleAjustRoomDaily(item.roomNumber, \"firsthour\")\r\n                      }\r\n                      className={cx(\"plus-button\")}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </span>\r\n                  <span>\r\n                    Giá phòng giờ đầu: {item.extraHour.toLocaleString()} VNĐ{\" \"}\r\n                    <button\r\n                      onClick={(e) =>\r\n                        handleAjustRoomDaily(item.roomNumber, \"extrahour\")\r\n                      }\r\n                      className={cx(\"plus-button\")}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <button onClick={(e) => handleHistoryRoom()}>Xem ngay</button>\r\n                </td>\r\n                <td>\r\n                  <button onClick={(e) => handleEditRoom(item._id)}>Xóa</button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td\r\n                colSpan=\"6\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  padding: \"20px\",\r\n                  fontStyle: \"italic\",\r\n                }}\r\n              >\r\n                Không có bảng nào được ghi\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className={cx(\"pagination\")}>\r\n        <div className={cx(\"notification\")}>\r\n          <span>\r\n            Trang {currentPage} of {totalPages()}\r\n          </span>\r\n        </div>\r\n        <div className={cx(\"controls\")}>\r\n          <button onClick={prevPage} disabled={currentPage === 1}>\r\n            Trang trước\r\n          </button>\r\n          <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n            Trang sau\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListRoomDetail;\r\n","import PizZip from \"pizzip\";\r\nimport Docxtemplater from \"docxtemplater\";\r\n\r\nconst generateContract = async (data) => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:3000/contract.docx\");\r\n    if (!response.ok) throw new Error(\"Không thể tải file DOCX\");\r\n\r\n    const blob = await response.blob();\r\n    const contentType = blob.type;\r\n    if (contentType !== \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\") {\r\n      console.error(\"File không hợp lệ\");\r\n      return;\r\n    }\r\n\r\n    const arrayBuffer = await blob.arrayBuffer();\r\n    if (arrayBuffer.byteLength === 0) {\r\n      console.error(\"File rỗng hoặc hỏng\");\r\n      return;\r\n    }\r\n\r\n    const zip = new PizZip(arrayBuffer);\r\n    const doc = new Docxtemplater(zip, { paragraphLoop: true, linebreaks: true });\r\n\r\n    doc.setData(data);\r\n    doc.render();\r\n\r\n    const out = doc.getZip().generate({ type: \"blob\" });\r\n    const url = URL.createObjectURL(out);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"HopDongDaDien.docx\";\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error(\"Lỗi tạo hợp đồng:\", error);\r\n  }\r\n};\r\n\r\nexport default generateContract;\r\n","export function convertNumberToVietnameseText(number) {\r\n    const ChuSo = [\"không\", \"một\", \"hai\", \"ba\", \"bốn\", \"năm\", \"sáu\", \"bảy\", \"tám\", \"chín\"];\r\n  \r\n    function docSo3ChuSo(baso) {\r\n      let tram = Math.floor(baso / 100);\r\n      let chuc = Math.floor((baso % 100) / 10);\r\n      let donvi = baso % 10;\r\n      let ketQua = \"\";\r\n  \r\n      if (tram !== 0) {\r\n        ketQua += ChuSo[tram] + \" trăm \";\r\n        if (chuc === 0 && donvi !== 0) ketQua += \"lẻ \";\r\n      }\r\n  \r\n      if (chuc !== 0 && chuc !== 1) {\r\n        ketQua += ChuSo[chuc] + \" mươi \";\r\n        if (donvi === 1) ketQua += \"mốt \";\r\n        else if (donvi === 5) ketQua += \"lăm \";\r\n        else if (donvi !== 0) ketQua += ChuSo[donvi] + \" \";\r\n      } else if (chuc === 1) {\r\n        ketQua += \"mười \";\r\n        if (donvi === 1) ketQua += \"mốt \";\r\n        else if (donvi === 5) ketQua += \"lăm \";\r\n        else if (donvi !== 0) ketQua += ChuSo[donvi] + \" \";\r\n      } else if (chuc === 0 && donvi !== 0) {\r\n        ketQua += ChuSo[donvi] + \" \";\r\n      }\r\n  \r\n      return ketQua.trim();\r\n    }\r\n  \r\n    function toVietnamese(number) {\r\n      if (number === 0) return \"không đồng\";\r\n  \r\n      let so = number.toString().split(\"\").reverse().join(\"\");\r\n      let arr = [];\r\n      for (let i = 0; i < so.length; i += 3) {\r\n        arr.push(so.substring(i, i + 3).split(\"\").reverse().join(\"\"));\r\n      }\r\n  \r\n      let chu = \"\";\r\n      let donvi = [\"\", \" nghìn\", \" triệu\", \" tỷ\", \" nghìn tỷ\", \" triệu tỷ\"];\r\n      for (let i = arr.length - 1; i >= 0; i--) {\r\n        let n = parseInt(arr[i]);\r\n        if (n !== 0) {\r\n          chu += docSo3ChuSo(n) + donvi[i] + \" \";\r\n        }\r\n      }\r\n  \r\n      return chu.trim() + \" đồng\";\r\n    }\r\n  \r\n    return toVietnamese(number);\r\n  }\r\n","\r\nexport const VNDFormatter = ( value ) => {\r\n  if (value == null || isNaN(value)) return '0';\r\n\r\n  const formatted = Number(value).toLocaleString();\r\n\r\n  return formatted;\r\n};\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./AddRoomMonth.module.scss\";\r\nimport { addRoomV2 } from \"api\";\r\nimport { useModal } from \"component/Modal/ModalContext\";\r\nimport ListRoom from \"../Room\";\r\nimport generateContract from \"component/Contract/Contract\";\r\nimport { CurrentDate, CalculateEndDate } from \"component/dateUtils\";\r\nimport {convertNumberToVietnameseText} from \"component/VietnamText/Vietnamtext\";\r\nimport { VNDFormatter } from \"component/VNDFormatter\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction AddRoomMonth() {\r\n  const [data, setData] = useState({});\r\n  const [deposit, setDeposit] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const { openModal } = useModal();\r\n  const [typeofWater, setTypeofWater] = useState(0);\r\n  const [contractData, setContractData] = useState({});\r\n\r\n\r\n\r\n  const handleAddRoom = async () => {\r\n    const today = new Date();\r\n\r\n    setContractData((prev) => ({\r\n      ...prev,\r\n      NGAY: today.getDate(),\r\n      THANG: today.getMonth() + 1, // nhớ +1 vì tháng trong JS bắt đầu từ 0\r\n      THOIGIANBATDAU: CurrentDate() ,\r\n      DIENBANGIAO: 0,\r\n      NUOCBANGIAO: 0,\r\n    }));\r\n    console.log(contractData);\r\n    if (typeofWater == 0) {\r\n      return alert(\"Không thể tạo phòng\");\r\n    }\r\n    if (data.hovaten && data.SoPhong && data.GiaPhong && data.sinhhoatchung) {\r\n      try {\r\n        const response = await addRoomV2(data);\r\n        if (response) {\r\n          setData({});\r\n\r\n          setTimeout(() => {\r\n            setMessage(\"\");\r\n          }, 3000);\r\n          setMessage(\"Thêm phòng thành công!\");\r\n          generateContract(contractData);\r\n        }\r\n      } catch (error) {\r\n        setMessage(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleDeposit = (value) => {\r\n      const rawValue = value.replace(/\\./g, \"\");\r\n      const numberValue = parseInt(rawValue, 10) || 0;\r\n      return numberValue.toLocaleString();\r\n    };\r\n\r\n    [\"GiaPhong\", \"sinhhoatchung\"].forEach((key) => {\r\n      if (data[key]) {\r\n        const formattedValue = handleDeposit(data[key]);\r\n        setDeposit((prev) => ({ ...prev, [key]: formattedValue }));\r\n      }\r\n    });\r\n  }, [data]);\r\n\r\n  const handleCloseBack = () => {\r\n    openModal(<ListRoom />);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cx(\"container\")}>\r\n        <h2 className={cx(\"title\")}>Thêm Phòng Mới</h2>\r\n        <form className={cx(\"form\")} id=\"roomForm\">\r\n          {/* THÔNG TIN NGƯỜI THUÊ */}\r\n          <div className={cx(\"section\")}>\r\n            <h3 className={cx(\"sectionTitle\")}>Thông tin người thuê</h3>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Họ và tên người thuê phòng</label>\r\n              <input\r\n                value={data.hovaten || \"\"}\r\n                onChange={(e) => {\r\n                  setData((prev) => ({ ...prev, hovaten: e.target.value })); // Cập nhật data\r\n                  setContractData((prev) => ({\r\n                    ...prev,\r\n                    HOVATEN: e.target.value\r\n                  }));\r\n                }}                \r\n                type=\"text\"\r\n                className={cx(\"input\")}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Căn cước công dân</label>\r\n              <input\r\n                value={data.cccd || \"\"}\r\n                onChange={(e) => {\r\n                  setData((prev) => ({ ...prev, cccd: e.target.value })); // Cập nhật data\r\n                  setContractData((prev) => ({\r\n                    ...prev,\r\n                    CCCD: e.target.value\r\n                  }));\r\n                }}     \r\n                type=\"text\"\r\n                className={cx(\"input\")}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Ngày sinh</label>\r\n              <input\r\n                value={data.NAMSINH || \"\"}\r\n                onChange={(e) => {\r\n                  setData((prev) => ({ ...prev, NAMSINH: e.target.value })); // Cập nhật data\r\n                  setContractData((prev) => ({\r\n                    ...prev,\r\n                    NAMSINH: e.target.value\r\n                  }));\r\n                }}     \r\n                type=\"date\"\r\n                className={cx(\"input\")}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Nơi thường trú</label>\r\n              <input\r\n                value={data.noithuongtru || \"\"}\r\n                onChange={(e) => {\r\n                  setData((prev) => ({ ...prev, noithuongtru: e.target.value })); // Cập nhật data\r\n                  setContractData((prev) => ({\r\n                    ...prev,\r\n                    THUONGTRU: e.target.value\r\n                  }));\r\n                }}     \r\n                type=\"text\"\r\n                className={cx(\"input\")}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Số điện thoại liên hệ</label>\r\n              <input\r\n                value={data.sdt || \"\"}\r\n                onChange={(e) => {\r\n                  setData((prev) => ({ ...prev, sdt: e.target.value })); // Cập nhật data\r\n                  setContractData((prev) => ({\r\n                    ...prev,\r\n                    SODIENTHOAI: e.target.value\r\n                  }));\r\n                }}     \r\n                type=\"text\"\r\n                className={cx(\"input\")}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Người ở cùng (nhiều người)</label>\r\n              <textarea\r\n                value={data.nguoio || \"\"}\r\n                onChange={(e) => {\r\n                  setData((prev) => ({ ...prev, nguoio: e.target.value })); // Cập nhật data\r\n                  setContractData((prev) => ({\r\n                    ...prev,\r\n                    DANHSACHNGUOIO: e.target.value\r\n                  }));\r\n                }}     \r\n                className={cx(\"input\")}\r\n                rows=\"3\"\r\n                placeholder=\"Ngăn cách bằng dấu phẩy (,)\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* THÔNG TIN PHÒNG */}\r\n          <div className={cx(\"section\")}>\r\n            <h3 className={cx(\"sectionTitle\")}>Thông tin phòng</h3>\r\n\r\n            <div className={cx(\"row\")}>\r\n              <div className={cx(\"formGroup\")}>\r\n                <label className={cx(\"label\")}>Số phòng</label>\r\n                <input\r\n                  value={data.SoPhong || \"\"}\r\n                  onChange={(e) => {\r\n                    setData((prev) => ({ ...prev, SoPhong: e.target.value })); // Cập nhật data\r\n                    setContractData((prev) => ({\r\n                      ...prev,\r\n                      SOPHONG: e.target.value\r\n                    }));\r\n                  }}    \r\n                  type=\"number\"\r\n                  className={cx(\"input\")}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className={cx(\"formGroup\")}>\r\n                <label className={cx(\"label\")}>Giá phòng tháng</label>\r\n                <input\r\n                  value={data.GiaPhong || \"\"}\r\n                  onChange={(e) => {\r\n                    setData((prev) => ({ ...prev, GiaPhong: e.target.value })); // Cập nhật data\r\n                    setContractData((prev) => ({\r\n                      ...prev,\r\n                      TIENBANGSO: VNDFormatter(e.target.value),\r\n                      TIENBANGCHU: convertNumberToVietnameseText(e.target.value),\r\n                    }));\r\n                  }}    \r\n                  type=\"number\"\r\n                  className={cx(\"input\")}\r\n                  required\r\n                />\r\n                <span>{deposit.GiaPhong || \"\"}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Phí sinh hoạt</label>\r\n              <input\r\n                value={data.sinhhoatchung || \"\"}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({\r\n                    ...prev,\r\n                    sinhhoatchung: e.target.value,\r\n                  }))\r\n                }\r\n                type=\"number\"\r\n                className={cx(\"input\")}\r\n                required\r\n              />\r\n              <span>{deposit.sinhhoatchung || \"\"}</span>\r\n            </div>\r\n\r\n            <div className={cx(\"row\")}>\r\n              <div className={cx(\"formGroup\")}>\r\n                <label className={cx(\"label\")}>Thời gian ở (số tháng)</label>\r\n                <input\r\n                  value={data.sothang || \"\"}\r\n                  onChange={(e) => {\r\n                    setData((prev) => ({ ...prev, sothang: e.target.value })); // Cập nhật data\r\n                    setContractData((prev) => ({\r\n                      ...prev,\r\n                      THANG: e.target.value,\r\n                      THOIGIANKETTHUC: CalculateEndDate(e.target.value)\r\n                    }));\r\n                  }}    \r\n                  type=\"number\"\r\n                  className={cx(\"input\")}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className={cx(\"formGroup\")}>\r\n                <label className={cx(\"label\")}>Số năm hợp đồng</label>\r\n                <input\r\n                  value={data.sonam || \"\"}\r\n                  onChange={(e) =>\r\n                    setData((prev) => ({ ...prev, sonam: e.target.value }))\r\n                  }\r\n                  type=\"number\"\r\n                  className={cx(\"input\")}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* LỰA CHỌN NƯỚC */}\r\n          <div className={cx(\"section\")}>\r\n            <label className={cx(\"label\")}>Loại sử dụng nước</label>\r\n            <select\r\n              value={typeofWater}\r\n              onChange={(e) => {\r\n                setTypeofWater(e.target.value);\r\n                setData((prev) => ({\r\n                  ...prev,\r\n                  loainuoc: e.target.value === \"1\" ? \"chiso\" : \"khoang\",\r\n                }));\r\n              }}\r\n              className={cx(\"input\", \"selection\")}\r\n              id=\"loainuoc\"\r\n            >\r\n              <option value=\"0\">Lựa chọn phù hợp</option>\r\n              <option value=\"1\">Dùng nước tính theo chỉ số</option>\r\n              <option value=\"2\">Dùng nước khoáng (90.000đ/người)</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* CHỈ SỐ ĐIỆN & NƯỚC */}\r\n          <div className={cx(\"section\")}>\r\n            <h3 className={cx(\"sectionTitle\")}>Chỉ số điện & nước</h3>\r\n\r\n            <div className={cx(\"formGroup\")}>\r\n              <label className={cx(\"label\")}>Chỉ số điện cũ</label>\r\n              <input\r\n                value={data.chisodiencu || \"\"}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({ ...prev, chisodiencu: e.target.value }))\r\n                }\r\n                type=\"number\"\r\n                className={cx(\"input\")}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {typeofWater == 2 && (\r\n              <div className={cx(\"formGroup\")}>\r\n                <label className={cx(\"label\")}>Số lượng người</label>\r\n                <input\r\n                  value={data.nguoi || \"\"}\r\n                  onChange={(e) =>\r\n                    setData((prev) => ({ ...prev, nguoi: e.target.value }))\r\n                  }\r\n                  type=\"number\"\r\n                  className={cx(\"input\")}\r\n                  required\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {typeofWater == 1 && (\r\n              <>\r\n                <div className={cx(\"row\")}>\r\n                  <div className={cx(\"formGroup\")}>\r\n                    <label className={cx(\"label\")}>Nước nóng cũ</label>\r\n                    <input\r\n                      value={data.chisonuocnongcu || \"\"}\r\n                      onChange={(e) =>\r\n                        setData((prev) => ({\r\n                          ...prev,\r\n                          chisonuocnongcu: e.target.value,\r\n                        }))\r\n                      }\r\n                      type=\"number\"\r\n                      className={cx(\"input\")}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={cx(\"formGroup\")}>\r\n                    <label className={cx(\"label\")}>Nước lạnh cũ</label>\r\n                    <input\r\n                      value={data.chisonuoclanhcu || \"\"}\r\n                      onChange={(e) =>\r\n                        setData((prev) => ({\r\n                          ...prev,\r\n                          chisonuoclanhcu: e.target.value,\r\n                        }))\r\n                      }\r\n                      type=\"number\"\r\n                      className={cx(\"input\")}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={cx(\"row\")}>\r\n                  <div className={cx(\"formGroup\")}>\r\n                    <label className={cx(\"label\")}>Nước nóng mới</label>\r\n                    <input\r\n                      value={data.chisonuocnongmoi || \"\"}\r\n                      onChange={(e) =>\r\n                        setData((prev) => ({\r\n                          ...prev,\r\n                          chisonuocnongmoi: e.target.value,\r\n                        }))\r\n                      }\r\n                      type=\"number\"\r\n                      className={cx(\"input\")}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={cx(\"formGroup\")}>\r\n                    <label className={cx(\"label\")}>Nước lạnh mới</label>\r\n                    <input\r\n                      value={data.chisonuoclanhmoi || \"\"}\r\n                      onChange={(e) =>\r\n                        setData((prev) => ({\r\n                          ...prev,\r\n                          chisonuoclanhmoi: e.target.value,\r\n                        }))\r\n                      }\r\n                      type=\"number\"\r\n                      className={cx(\"input\")}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* NÚT ĐIỀU KHIỂN */}\r\n          <div className={cx(\"control\")}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleCloseBack()}\r\n              className={cx(\"button\")}\r\n            >\r\n              Quay lại\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleAddRoom()}\r\n              className={cx(\"button\")}\r\n            >\r\n              Thêm Phòng\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <p id=\"message\" className={cx(\"message\")}>\r\n          {message}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddRoomMonth;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./AdjustRoom.module.scss\";\r\nimport { GetUpdateRoom } from \"api\";\r\nimport { useModal } from \"component/Modal/ModalContext\";\r\nimport ListRoom from \"component/RoomMonth/Room\";\r\nimport {VNDFormatter} from \"component/VNDFormatter\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction AdjustRoomMonth({ props }) {\r\n  const [data, setData] = useState({});\r\n  const [deposit, setDeposit] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const { openModal } = useModal();\r\n\r\n  const handleUpdateRoom = async () => {\r\n    try {\r\n      const response = await GetUpdateRoom(props._id, data);\r\n      if (response) {\r\n        setTimeout(() => {\r\n          setMessage(\"\");\r\n        }, 3000);\r\n        setMessage(\"Cập nhật phòng thành công!\");\r\n      } else {\r\n        setMessage(\"Thêm phòng thất bại!\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeposit = (value) => {\r\n    const rawValue = value.replace(/\\./g, \"\");\r\n    const numberValue = parseInt(rawValue, 10) || 0;\r\n    return numberValue.toLocaleString();\r\n  };\r\n  useEffect(() => {\r\n    // Cập nhật `data`\r\n    setData({\r\n      hovaten: props.hovaten,\r\n      GiaPhong: props.GiaPhong,\r\n      chisodiencu: props.chisodiencu,\r\n      chisodienmoi: props.chisodienmoi,\r\n      chisonuoclanhcu: props.chisonuoclanhcu,\r\n      chisonuoclanhmoi: props.chisonuoclanhmoi,\r\n      chisonuocnongcu: props.chisonuocnongcu,\r\n      chisonuocnongmoi: props.chisonuocnongmoi,\r\n      sinhhoatchung: props.sinhhoatchung,\r\n      ghichu: props.ghichu,\r\n      loainuoc: props.loainuoc || \"chiso\",\r\n      giakhoangnuoc: props.giakhoangnuoc,\r\n      songuoikhoang: props.songuoikhoang,\r\n    });\r\n    setDeposit({\r\n      giakhoangnuoc: props.giakhoangnuoc,\r\n      GiaPhong: props.GiaPhong,\r\n      sinhhoatchung: props.sinhhoatchung,\r\n    });\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    // Chạy lại khi `data` thay đổi\r\n    [\"GiaPhong\", \"sinhhoatchung\"].forEach((key) => {\r\n      if (data[key]) {\r\n        const formattedValue = handleDeposit(data[key]);\r\n        setDeposit((prev) => ({ ...prev, [key]: formattedValue }));\r\n      }\r\n    });\r\n  }, [props]); // Theo dõi sự thay đổi của `data`\r\n\r\n  const handleBackAgian = () => {\r\n    return openModal(<ListRoom />);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cx(\"container\")}>\r\n        <h2 className={cx(\"title\")}>Cập nhật phòng - {props.SoPhong}</h2>\r\n        <form className={cx(\"form\")} id=\"roomForm\">\r\n          {/* Nhóm thông tin số phòng và giá phòng */}\r\n          <div className={cx(\"formGroup\")}>\r\n            <div className={cx(\"inputGroup\")}>\r\n              <label className={cx(\"label\")}>Họ và tên</label>\r\n              <input\r\n                value={data.hovaten || \"\"}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({\r\n                    ...prev,\r\n                    hovaten: e.target.value,\r\n                  }))\r\n                }\r\n                type=\"text\"\r\n                id=\"hovaten\"\r\n                required\r\n                className={cx(\"input\")}\r\n              />\r\n            </div>\r\n            <div className={cx(\"inputGroup\")}>\r\n              <label className={cx(\"label\")}>Số Phòng</label>\r\n              <input\r\n                value={props.SoPhong}\r\n                type=\"number\"\r\n                id=\"SoPhong\"\r\n                disabled\r\n                className={cx(\"input\")}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Nhóm thông tin sinh hoạt chung */}\r\n          <div className={cx(\"formGroup\")}>\r\n            <div className={cx(\"inputGroup\")}>\r\n              <label className={cx(\"label\")}>Giá phòng tháng</label>\r\n              <input\r\n                value={data.GiaPhong || \"\"}\r\n                onChange={(e) => {\r\n                  setData((prev) => ({ ...prev, GiaPhong: e.target.value }));\r\n                  setDeposit((prev) => ({\r\n                    ...prev,\r\n                    GiaPhong: e.target.value,\r\n                  }));\r\n                }}\r\n                type=\"number\"\r\n                id=\"GiaPhong\"\r\n                required\r\n                className={cx(\"input\")}\r\n              />\r\n              <span>{VNDFormatter(deposit.GiaPhong) || \"\"}</span>\r\n            </div>\r\n\r\n            <div className={cx(\"inputGroup\")}>\r\n              <label className={cx(\"label\")}>Phí sinh hoạt</label>\r\n              <input\r\n                value={data.sinhhoatchung || \"\"}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({\r\n                    ...prev,\r\n                    sinhhoatchung: e.target.value,\r\n                  }))\r\n                }\r\n                type=\"number\"\r\n                id=\"sinhhoatchung\"\r\n                required\r\n                className={cx(\"input\")}\r\n              />\r\n              <span>\r\n                {VNDFormatter(data.sinhhoatchung) || \"\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Nhóm chỉ số điện và nước */}\r\n          <div className={cx(\"formGroup\")}>\r\n            <div className={cx(\"inputGroup\")}>\r\n              <label className={cx(\"label\")}>Chỉ số điện cũ</label>\r\n              <input\r\n                value={data.chisodiencu || \"\"}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({ ...prev, chisodiencu: e.target.value }))\r\n                }\r\n                type=\"number\"\r\n                id=\"chisodien\"\r\n                required\r\n                className={cx(\"input\")}\r\n              />\r\n            </div>\r\n            <div className={cx(\"inputGroup\")}>\r\n              <label className={cx(\"label\")}>Chỉ số điện mới</label>\r\n              <input\r\n                value={data.chisodienmoi || \"\"}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({ ...prev, chisodienmoi: e.target.value }))\r\n                }\r\n                type=\"number\"\r\n                id=\"chisodien\"\r\n                required\r\n                className={cx(\"input\")}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sự lựa chọn */}\r\n          <div className={cx(\"formGroup\", \"w-100\")}>\r\n            <div className={cx(\"section\")}>\r\n              <label className={cx(\"label\", \"w-100\")}>Loại sử dụng nước</label>\r\n              <select\r\n                value={data.loainuoc || \"0\"}\r\n                onChange={(e) =>\r\n                  setData((prev) => ({\r\n                    ...prev,\r\n                    loainuoc: e.target.value,\r\n                  }))\r\n                }\r\n                id=\"loainuoc\"\r\n                className={cx(\"input\", \"selection\")}\r\n              >\r\n                <option value=\"0\">Lựa chọn phù hợp</option>\r\n                <option value=\"chiso\">Dùng nước tính theo chỉ số</option>\r\n                <option value=\"khoang\">\r\n                  Dùng nước khoáng (\r\n                  {VNDFormatter(data.giakhoangnuoc)}/người)\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Nhóm chỉ số nước nóng và nước lạnh */}\r\n\r\n          {/* Nhóm chỉ số nước lạnh cũ và mới */}\r\n\r\n          {data.loainuoc == \"chiso\" && (\r\n            <>\r\n              <div className={cx(\"formGroup\")}>\r\n                <div className={cx(\"inputGroup\")}>\r\n                  <label className={cx(\"label\")}>Chỉ số nước nóng cũ</label>\r\n                  <input\r\n                    value={data.chisonuocnongcu || \"\"}\r\n                    onChange={(e) =>\r\n                      setData((prev) => ({\r\n                        ...prev,\r\n                        chisonuocnongcu: e.target.value,\r\n                      }))\r\n                    }\r\n                    type=\"number\"\r\n                    id=\"chisodien\"\r\n                    required\r\n                    className={cx(\"input\")}\r\n                  />\r\n                </div>\r\n                <div className={cx(\"inputGroup\")}>\r\n                  <label className={cx(\"label\")}>Chỉ số nước nóng mới</label>\r\n                  <input\r\n                    value={data.chisonuocnongmoi || \"\"}\r\n                    onChange={(e) =>\r\n                      setData((prev) => ({\r\n                        ...prev,\r\n                        chisonuocnongmoi: e.target.value,\r\n                      }))\r\n                    }\r\n                    type=\"number\"\r\n                    id=\"chisodien\"\r\n                    required\r\n                    className={cx(\"input\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={cx(\"formGroup\")}>\r\n                <div className={cx(\"inputGroup\")}>\r\n                  <label className={cx(\"label\")}>Chỉ số nước lạnh cũ</label>\r\n                  <input\r\n                    value={data.chisonuoclanhcu || \"\"}\r\n                    onChange={(e) =>\r\n                      setData((prev) => ({\r\n                        ...prev,\r\n                        chisonuoclanhcu: e.target.value,\r\n                      }))\r\n                    }\r\n                    type=\"number\"\r\n                    id=\"chisonuoclanh\"\r\n                    required\r\n                    className={cx(\"input\")}\r\n                  />\r\n                </div>\r\n                <div className={cx(\"inputGroup\")}>\r\n                  <label className={cx(\"label\")}>Chỉ số nước lạnh mới</label>\r\n                  <input\r\n                    value={data.chisonuoclanhmoi || \"\"}\r\n                    onChange={(e) =>\r\n                      setData((prev) => ({\r\n                        ...prev,\r\n                        chisonuoclanhmoi: e.target.value,\r\n                      }))\r\n                    }\r\n                    type=\"number\"\r\n                    id=\"chisonuoclanh\"\r\n                    required\r\n                    className={cx(\"input\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {data.loainuoc == \"khoang\" && (\r\n            <>\r\n              <div className={cx(\"formGroup\")}>\r\n                <div className={cx(\"inputGroup\")}>\r\n                  <label className={cx(\"label\")}>Số lượng người ở</label>\r\n                  <input\r\n                    value={data.songuoikhoang || \"\"}\r\n                    onChange={(e) =>\r\n                      setData((prev) => ({\r\n                        ...prev,\r\n                        songuoikhoang: Number(e.target.value),\r\n                      }))\r\n                    }\r\n                    type=\"number\"\r\n                    id=\"songuoikhoang\"\r\n                    required\r\n                    className={cx(\"input\")}\r\n                  />\r\n                </div>\r\n\r\n                <div className={cx(\"inputGroup\")}>\r\n                  <label className={cx(\"label\")}>Giá khoáng điều chỉnh</label>\r\n                  <input\r\n                    value={data.giakhoangnuoc || \"\"}\r\n                    onChange={(e) => {\r\n                      setData((prev) => ({\r\n                        ...prev,\r\n                        giakhoangnuoc: Number(e.target.value),\r\n                      }));\r\n                      setDeposit((prev) => ({\r\n                        ...prev,\r\n                        giakhoangnuoc: e.target.value,\r\n                      }));\r\n                    }}\r\n                    type=\"number\"\r\n                    id=\"giakhoangnuoc\"\r\n                    required\r\n                    className={cx(\"input\")}\r\n                  />\r\n                  <span>\r\n                    {<VNDFormatter value={deposit.giakhoangnuoc} /> || \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <div className={cx(\"control\")}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleBackAgian()}\r\n              className={cx(\"button\")}\r\n            >\r\n              Quay lại\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleUpdateRoom()}\r\n              className={cx(\"button\")}\r\n            >\r\n              Cập Nhật\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p id=\"message\" className={cx(\"message\")}>\r\n          {message}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdjustRoomMonth;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Bill.module.scss\";\r\nimport { useParams } from \"react-router\";\r\nimport { GetAllRoomsMonth } from \"api\";\r\nimport { VNDFormatter } from \"component/VNDFormatter\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction Bill({props}) {\r\n  const { room } = useParams();\r\n  const contentRef = useRef([]);\r\n  const sliderRef = useRef(null);  // Thêm ref cho slider\r\n  const setWidth = useRef(null);  // Thêm ref cho slider\r\n  const [data, setData] = useState([]);  \r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = async(e) => {\r\n        if (e.key === \"ArrowLeft\") {\r\n          sliderRef.current.slickPrev();  // Gọi slickPrev() để chuyển sang slide trước\r\n        } else if (e.key === \"ArrowRight\") {\r\n          sliderRef.current.slickNext();  // Gọi slickNext() để chuyển sang slide tiếp theo\r\n        } else if(e.key === \"Enter\") {\r\n            \r\n            const checked = window.confirm(\"Bạn có muốn tạo phiếu này không\")\r\n            if(checked) {\r\n              alert(\"Hệ thống cần thời gian render ảnh vui lòng đợi khoảng 3-5s\")\r\n              const download = await handleDownloadAll()\r\n              if(download) alert(\"render thành công\")\r\n            }else{\r\n              alert(\"Hủy thành công\")\r\n            }\r\n        }\r\n      };\r\n  \r\n      // Lắng nghe sự kiện khi bàn phím được nhấn\r\n      window.addEventListener(\"keydown\", handleKeyDown);\r\n  \r\n      // Cleanup event listener khi component unmount\r\n      return () => {\r\n        window.removeEventListener(\"keydown\", handleKeyDown);\r\n      };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const GetRoom = async () => {\r\n      try {\r\n        const response = await GetAllRoomsMonth();\r\n        if (response) {\r\n          const filtered = response.data.filter(\r\n            (item) => item.SoPhong === Number(room) || item.SoPhong === Number(props)\r\n          );\r\n          setData(filtered.length > 0 ? filtered : response.data.filter((item) => item.GiaPhong > 0));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching rooms:\", error);\r\n      }\r\n    };\r\n    GetRoom();\r\n  }, [room]);\r\n\r\n\r\n  const handleDownloadAll = async () => {\r\n    const originalWidth = setWidth.current.style.width;\r\n\r\n    setWidth.current.style.width = \"100%\"\r\n    const promises = contentRef.current.map(async (content, index) => {\r\n          const originalPadding = content.style.padding;\r\n          content.style.padding = \"24px\";\r\n          const canvas = await html2canvas(content, {\r\n            scale: 2,\r\n            useCORS: true,\r\n          });\r\n          const imgData = canvas.toDataURL(\"image/png\");\r\n\r\n          // Tạo một liên kết tải về cho từng ảnh\r\n          const link = document.createElement(\"a\");\r\n          link.href = imgData;\r\n          link.download = `hoa-don-phong-${index}.png`;\r\n          link.click();\r\n          content.style.padding = originalPadding;\r\n    });\r\n    \r\n    // Chờ tất cả các Promise hoàn thành (tải tất cả ảnh)\r\n    await promises;\r\n    \r\n    setWidth.current.style.width = originalWidth\r\n    return true\r\n  };\r\n\r\n  \r\n  const sliderSettings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 800,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    arrows: true, // Kích hoạt arrow\r\n    prevArrow: <div className=\"prev-arrow\" />,\r\n    nextArrow: <div className=\"next-arrow\" />,\r\n    centerMode: true, // để giữ slide giữa\r\n    centerPadding: \"0px\", // không padding thêm\r\n  };\r\n  \r\n\r\n  return (\r\n    <div ref={setWidth} className={cx(\"invoice-container\")}>\r\n      <div className={cx(\"tutorial\")}>\r\n        <span>Để tải hóa đơn bạn hãy nhấn nút Enter, hệ thống sẽ tải hóa đơn về máy<br></br>Để duy chuyển giữa các ánh nhấn nút mũi tên qua trái trên bàn phím và mũi tên qua phải trên bàn phím</span>\r\n      </div>\r\n      {data.length > 0 && (\r\n        <Slider {...sliderSettings} ref={sliderRef}>\r\n          {data.map((item,index) => {\r\n            console.log(item);\r\n            const dientieuthu = item.chisodienmoi - item.chisodiencu;\r\n            const nuoctieuthu =\r\n              item.chisonuoclanhmoi -\r\n              item.chisonuoclanhcu +\r\n              item.chisonuocnongmoi -\r\n              item.chisonuocnongcu;\r\n            const dieukien1 = nuoctieuthu * 20000;\r\n            const dieukien2 = item.songuoikhoang * item.giakhoangnuoc;\r\n            const coastNuoc = item.loainuoc == \"chiso\" ? dieukien1 : dieukien2;\r\n            const coastDien = dientieuthu > 0 ? dientieuthu * 4000 : 0;\r\n            const total =\r\n              coastNuoc + coastDien + item.sinhhoatchung + item.GiaPhong;\r\n            const Sophong = String(item.SoPhong).padStart(3, \"0\");\r\n\r\n            return (\r\n              <div key={index} ref={(el) => (contentRef.current[item.SoPhong] = el)} className={cx(\"container_billhata\")} >\r\n                <div className={cx(\"header\")}>\r\n                  <div className={cx(\"left\")}>\r\n                    <p>\r\n                      <strong>HATA HOME STAY</strong>\r\n                    </p>\r\n                    <p>128/1A Trần Phú</p>\r\n                  </div>\r\n                  <div className={cx(\"center\")}>\r\n                    <p>PHIẾU THU TIỀN TRỌ</p>\r\n                  </div>\r\n                  <div className={cx(\"right\")}>\r\n                    <span>Phòng số :</span>\r\n                    <span className={cx(\"line\", \"w-32\", \"text-center\",\"customer-text\")}>\r\n                      {Sophong}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={cx(\"info\")}>\r\n                  <span>Thời gian :</span>\r\n                  <span\r\n                    className={cx(\r\n                      \"line\",\r\n                      \"w-64\",\r\n                      \"text-center\",\r\n                      \"customer-text\"\r\n                    )}\r\n                  >\r\n                    Tháng {new Date().getMonth() + 1}/2025\r\n                  </span>\r\n                </div>\r\n                <div className={cx(\"info\")}>\r\n                  <span>Họ và tên :</span>\r\n                  <span\r\n                    className={cx(\r\n                      \"line\",\r\n                      \"w-64\",\r\n                      \"text-center\",\r\n                      \"customer-text\"\r\n                    )}\r\n                  >\r\n                    {item.hovaten || \"Chị Phương\"}\r\n                  </span>\r\n                </div>\r\n\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>STT</th>\r\n                      <th>Nội dung</th>\r\n                      <th>Chỉ số đầu</th>\r\n                      <th>Chỉ số cuối</th>\r\n                      <th>Số lượng</th>\r\n                      <th>Đơn giá</th>\r\n                      <th>Thành tiền</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr className={cx(\"customer-text\")}>\r\n                      <td>1</td>\r\n                      <td>Tiền Phòng</td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>{VNDFormatter(item.GiaPhong)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>2</td>\r\n                      <td>Tiền Điện</td>\r\n                      <td>{item.chisodiencu}</td>\r\n                      <td>{item.chisodienmoi}</td>\r\n                      <td>{dientieuthu}</td>\r\n                      <td>{VNDFormatter(4000)}</td>\r\n                      <td>{VNDFormatter(coastDien)}</td>\r\n                    </tr>\r\n                    {item.loainuoc === \"chiso\" ? (\r\n                      <tr>\r\n                        <td>3</td>\r\n                        <td>Tiền Nước</td>\r\n                        <td>{item.chisonuoclanhcu + item.chisonuocnongcu}</td>\r\n                        <td>{item.chisonuoclanhmoi + item.chisonuocnongmoi}</td>\r\n                        <td>{nuoctieuthu}</td>\r\n                        <td>{VNDFormatter(20000)}</td>\r\n                        <td>{VNDFormatter(coastNuoc)}</td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td>3</td>\r\n                        <td>Tiền Nước</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>{item.songuoikhoang} người</td>\r\n                        <td>{VNDFormatter(item.giakhoangnuoc)}</td>\r\n                        <td>{VNDFormatter(coastNuoc)}</td>\r\n                      </tr>\r\n                    )}\r\n                    <tr>\r\n                      <td>4</td>\r\n                      <td>Tiền Wifi+Rác+Xe</td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>{VNDFormatter(item.sinhhoatchung)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>5</td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>6</td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>7</td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td></td>\r\n                      <td>\r\n                        <strong className={cx(\"total\")}>TỔNG CỘNG</strong>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <strong>{VNDFormatter(total)}</strong>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <div className={cx(\"footer\")}>\r\n                  <div className={cx(\"text\")}>\r\n                    <span>Ký nhận</span>\r\n                  </div>\r\n                  <div className={cx(\"image\")}>\r\n                    <img src=\"/EDIT.png\" alt=\"signature\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bill;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./TotalPaymentInfo.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { useModal } from \"component/Modal/ModalContext\";\r\nimport Room from \"component/RoomMonth/Room\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction TotalPaymentInfo({ props}) {\r\n  const [data, setData] = useState({});\r\n\r\n  const [onlyPrice, setOnlyPrice] = useState(3)\r\n  const {openModal} = useModal()\r\n\r\n  useEffect(() => {\r\n    let totalRoom = 0;\r\n    let totalElectric = 0;\r\n    let totalWater = 0;\r\n    let totalElectricUsed = 0;\r\n    let totalWaterUsed = 0;\r\n    let roomCount = [];\r\n    let filteredRooms;\r\n    if (onlyPrice === 1) {\r\n      filteredRooms = props.filter((item) => item.GiaPhong > 0);\r\n      \r\n    } else {\r\n      filteredRooms = props.filter((item) => item.GiaPhong === 0);\r\n    }\r\n\r\n    filteredRooms.forEach((item) => {\r\n      roomCount.push(item.SoPhong)\r\n      const totalElectricCount = item.chisodienmoi - item.chisodiencu\r\n      const totalWaterCount = item.loainuoc == \"chiso\" && (item.chisonuoclanhmoi + item.chisonuocnongmoi) - (item.chisonuocnongcu + item.chisonuoclanhcu)\r\n    \r\n      console.log(`Số phòng sử dụng điện ${item.SoPhong}: ${totalElectricCount}`)\r\n      console.log(`Số phòng sử dụng nước ${item.SoPhong}: ${totalWaterCount}`)\r\n\r\n      totalElectric+=totalElectricCount\r\n      totalElectricUsed += totalElectricCount * 4000\r\n\r\n      totalWater += totalWaterCount\r\n      totalWaterUsed += totalWaterCount * 20000\r\n    });\r\n\r\n    if(roomCount.length) {\r\n      setData({\r\n        totalRoom: totalRoom.toLocaleString(),\r\n        totalElectric: totalElectric > 0 ? totalElectric : 0,\r\n        totalWater: totalWater > 0 ? totalWater : 0,\r\n        totalElectricUsed:\r\n          totalElectricUsed > 0 ? totalElectricUsed.toLocaleString() : 0,\r\n        totalWaterUsed:\r\n          totalWaterUsed > 0 ? totalWaterUsed.toLocaleString() : 0,\r\n        roomCount: roomCount.length\r\n          ? roomCount.join(\", \")\r\n          : \"Không có phòng nào phù hợp\",\r\n      });\r\n    }else{\r\n      setOnlyPrice(3)\r\n    }\r\n\r\n    \r\n  }, [onlyPrice]); // nên thêm dependency là props nếu nó có thể thay đổi\r\n\r\n  return (\r\n    <div className={cx(\"container\")}>\r\n      <div className={cx(\"summary-item\")}>\r\n        <button onClick={(e) => setOnlyPrice(2)} className={cx(\"btn-summary\")}>\r\n          Tổng kết hóa đơn phòng trống\r\n        </button>\r\n        <button onClick={(e) => setOnlyPrice(1)}  className={cx(\"btn-summary\", \"btn-total\")}>\r\n          Tổng kết hóa đơn phòng hiện có\r\n        </button>\r\n      </div>\r\n      {onlyPrice == 3 && <div className={cx(\"center\")}><span>Hiện chưa có dữ liệu được nạp vui lòng thử lại sau khi nạp dữ liệu</span></div>}\r\n\r\n{(onlyPrice === 1 || onlyPrice === 2) && (\r\n  <div className={cx(\"result\")}>\r\n    <div className={cx(\"result-item\")}>\r\n      <strong>Phân loại</strong> {onlyPrice === 2 ? \"Các phòng chưa có khách\" : \"Các phòng có khách\"}\r\n    </div>\r\n    <div className={cx(\"result-item\")}>\r\n      <strong>Tổng số phòng đã tính:</strong> Phòng: {data.roomCount}\r\n    </div>\r\n\r\n    <div className={cx(\"result-item\")}>\r\n      <strong>Tổng lượng điện sử dụng:</strong> {data.totalElectric} kWh\r\n    </div>\r\n\r\n    <div className={cx(\"result-item\")}>\r\n      <strong>Tổng tiền điện:</strong> {data.totalElectricUsed} đồng\r\n    </div>\r\n\r\n    <div className={cx(\"result-item\")}>\r\n      <strong>Tổng lượng nước sử dụng:</strong> {data.totalWater} m³\r\n    </div>\r\n\r\n    <div className={cx(\"result-item\")}>\r\n      <strong>Tổng tiền nước:</strong> {data.totalWaterUsed} đồng\r\n    </div>\r\n\r\n    <div className={cx(\"result-item\")}>\r\n      <strong>Tổng tiền phòng (cố định):</strong> {data.totalRoom} đồng\r\n    </div>\r\n\r\n    <div className={cx(\"result-item\")}>\r\n      <button onClick={(e) => openModal(<Room />)} className={cx(\"button\")}>⬅️ Quay lại</button>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TotalPaymentInfo;\r\n","import classNames from \"classnames/bind\"\r\nimport styles from './PaymentInfo.module.scss'\r\n\r\nimport ListRoom from \"../Room\";\r\nimport TotalPaymentInfo from \"./TotalPaymentInfo\";\r\nimport { GetUpdateRoom } from \"api\";\r\nimport { useModal } from \"component/Modal/ModalContext\";\r\n\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\n\r\nfunction Menu({props}) {\r\n    const { openModal } = useModal();\r\n    \r\n    const HandleRefresh = async () => {\r\n        const confirmRefresh = window.confirm(\r\n          \"Khi làm mới hóa đơn, số liệu nước mới và điện mới sẽ được chuyển thành số liệu cũ.các thông số sẽ được lưu vào googlesheet. Bạn có chắc chắn muốn làm mới hóa đơn không?\"\r\n        );\r\n        if (!confirmRefresh) {\r\n          alert(\"Đã hủy thao tác làm mới hóa đơn\");\r\n          return;\r\n        }\r\n    \r\n        const password = prompt(\"Nhập mật khẩu để làm mới hóa đơn\");\r\n        if (password !== \"0786566176\") {\r\n          alert(\"Mật khẩu không đúng, không thể làm mới hóa đơn\");\r\n          return;\r\n        }\r\n    \r\n        let position = 0;\r\n    \r\n        // Dùng for...of để xử lý async tuần tự\r\n        for (const item of props) {\r\n          position++;\r\n    \r\n          const object = {\r\n            hovaten: item.hovaten,\r\n            GiaPhong: item.GiaPhong,\r\n            chisodiencu: item.chisodienmoi, // mới -> cũ\r\n            chisodienmoi: 0, // reset mới\r\n            chisonuoclanhcu: item.chisonuoclanhmoi,\r\n            chisonuoclanhmoi: 0,\r\n            chisonuocnongcu: item.chisonuocnongmoi,\r\n            chisonuocnongmoi: 0,\r\n            sinhhoatchung: item.sinhhoatchung,\r\n            ghichu: item.ghichu,\r\n          };\r\n    \r\n          const response = await GetUpdateRoom(item._id, object);\r\n    \r\n          if (response && position >= props.length) {\r\n            openModal(<ListRoom />);\r\n          }\r\n        }\r\n      };\r\n\r\n    const handleBack = () => {\r\n        openModal(<ListRoom />);\r\n      };\r\n    \r\n      const Total = () => {\r\n        const data = props;\r\n        openModal(<TotalPaymentInfo props={data} only={1} />);\r\n      };\r\n    return (\r\n        <div className={cx(\"invoice-summary\")}>\r\n        <div className={cx(\"summary-item\")}>\r\n          <button\r\n            onClick={() => Total()}\r\n            className={cx(\"btn-summary\", \"btn-total\")}\r\n          >\r\n            Tổng kết\r\n          </button>\r\n        </div>\r\n        <div className={cx(\"summary-item\")}>\r\n          <button\r\n            onClick={() => HandleRefresh()}\r\n            className={cx(\"btn-summary\", \"btn-refresh\")}\r\n          >\r\n            Làm mới\r\n          </button>\r\n        </div>\r\n        <div className={cx(\"summary-item\")}>\r\n          <button\r\n            onClick={handleBack}\r\n            className={cx(\"btn-summary\", \"btn-back\")}\r\n          >\r\n            Quay lại\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Menu","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./PaymentInfo.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { useModal } from \"component/Modal/ModalContext\";\r\n\r\nimport Bill from \"component/Bill/Bill\";\r\nimport { FaPrint } from 'react-icons/fa';\r\nimport Menu from \"./Menu\";\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction PayMentInfo({ props }) {\r\n  const { openModal } = useModal();\r\n  const [choice, setChoice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(choice === 2) {\r\n      openModal(<Bill />)\r\n    }\r\n  }, [choice])\r\n  \r\n\r\n  return (\r\n    <div className={cx(\"invoice-container\")}>\r\n      <h2 className={cx(\"invoice-title\")}>Danh sách hóa đơn thanh toán</h2>\r\n      <Menu props={props} />\r\n      {choice === 0 && (\r\n        <div className={cx(\"choice\")}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={choice === 1}\r\n              onChange={() => setChoice(1)}\r\n            />\r\n            In phiếu nội bộ<br></br>\r\n            (Sẽ hiển thị tất cả các thông số của nhằm mục đích quản lý)<br></br>\r\n            (Có thể tạo phiếu cho từng phòng)\r\n          </label>  \r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={choice === 2}\r\n              onChange={() => setChoice(2)}\r\n            />\r\n            In phiếu cho Khách hàng<br></br>\r\n            (Chỉ có các phòng có khách sẽ được tạo phiếu)<br></br>\r\n            (Không thể tạo phiếu cho từng phòng riêng lẽ)<br></br>\r\n            (Nhấn Enter Để Download Tất Cả)<br></br>\r\n          </label>\r\n          \r\n          \r\n        </div>\r\n      )}\r\n\r\n      {choice === 1 && (\r\n        <div className={cx(\"invoice-list\")}>\r\n          {props\r\n            .filter((item) => item.GiaPhong >= 0)\r\n            .map((item) => {\r\n              const dientieuthu = item.chisodienmoi - item.chisodiencu;\r\n              const nuoctieuthu =\r\n                item.chisonuoclanhmoi -\r\n                item.chisonuoclanhcu +\r\n                item.chisonuocnongmoi -\r\n                item.chisonuocnongcu;\r\n              const coastNuoc = nuoctieuthu > 0 ? nuoctieuthu * 20000 : 0;\r\n              const coastDien = dientieuthu > 0 ? dientieuthu * 4000 : 0;\r\n              const total =\r\n                coastNuoc + coastDien + item.sinhhoatchung + item.GiaPhong;\r\n              return (\r\n                <div className={cx(\"invoice-card\")}>\r\n                  <div className={cx(\"print\")} onClick={(e) => openModal(<Bill props={item.SoPhong} />)}><FaPrint /></div>\r\n                  <h3 className={cx(\"customer-name\")}>\r\n                    {item.hovaten} - {item.SoPhong}\r\n                  </h3>\r\n                  <div className={cx(\"invoice-info\")}>\r\n                    <span className={cx(\"divider\")}>\r\n                      -----------------------------------------------\r\n                    </span>\r\n                    <div className={cx(\"invoice-info-item\")}>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Điện mới: {item.chisodienmoi} kWh\r\n                      </div>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Điện cũ: {item.chisodiencu} kWh\r\n                      </div>\r\n                    </div>\r\n                    <span className={cx(\"divider\")}>\r\n                      --------------------------------------------------\r\n                    </span>\r\n                    <div className={cx(\"invoice-info-item\")}>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Nước lạnh mới: {item.chisonuoclanhmoi} m³\r\n                      </div>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Nước lạnh cũ: {item.chisonuoclanhcu} m³\r\n                      </div>\r\n                    </div>\r\n                    <div className={cx(\"invoice-info-item\")}>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Nước nóng mới: {item.chisonuocnongmoi} m³\r\n                      </div>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Nước nóng cũ: {item.chisonuocnongcu} m³\r\n                      </div>\r\n                    </div>\r\n                    <div className={cx(\"invoice-info-item\")}>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Tổng nước mới:{\" \"}\r\n                        {item.chisonuoclanhmoi + item.chisonuocnongmoi} m³\r\n                      </div>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Tổng nước cũ:{\" \"}\r\n                        {item.chisonuoclanhcu + item.chisonuocnongcu} m³\r\n                      </div>\r\n                    </div>\r\n\r\n                    <span className={cx(\"divider\")}>\r\n                      --------------------------------------------------\r\n                    </span>\r\n                    <div className={cx(\"invoice-info-item\")}>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Giá phòng: {item.GiaPhong.toLocaleString()}đ\r\n                      </div>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Phí Sinh hoạt: {item.sinhhoatchung.toLocaleString()}đ\r\n                      </div>\r\n                    </div>\r\n                    <div className={cx(\"invoice-info-item\")}>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Điện tiêu thụ: {dientieuthu >= 0 ? dientieuthu : 0} kWh\r\n                      </div>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Nước tiêu thụ: {nuoctieuthu >= 0 ? nuoctieuthu : 0} m³\r\n                      </div>\r\n                    </div>\r\n                    <span className={cx(\"divider\")}>\r\n                      --------------------------------------------------\r\n                    </span>\r\n                    <div className={cx(\"invoice-info-item\")}>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Tiền điện: {coastDien.toLocaleString()}đ<br></br>Giá\r\n                        điện:{\" \"}\r\n                        {dientieuthu >= 0 ? `${dientieuthu} x 4.000đ` : \"0\"}đ\r\n                      </div>\r\n                      <div className={cx(\"info-line\")}>\r\n                        Tiền nước: {coastNuoc.toLocaleString()}đ<br></br>Giá\r\n                        nước:{\" \"}\r\n                        {nuoctieuthu >= 0 ? `${nuoctieuthu} x 20.000đ` : \"0\"}đ\r\n                      </div>\r\n                    </div>\r\n                    <span className={cx(\"divider\")}>\r\n                      --------------------------------------------------\r\n                    </span>\r\n                    <span className={cx(\"total-amount\")}>\r\n                      Tổng thanh toán: {total.toLocaleString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PayMentInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GetAllRoomsMonth, GetUpdateRoom, deleteRoomV2 } from \"api\";\r\nimport { useModal } from \"component/Modal/ModalContext\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Room.module.scss\";\r\nimport AddRoomMonth from \"./AddRoomMonth/AddRoomMonth\";\r\nimport { FaTrash, FaEdit } from \"react-icons/fa\";\r\nimport AdjustRoomMonth from \"./AdjustRoom/AdjustRoom\";\r\nimport PayMentInfo from \"./PaymentInfo/PaymentInfo\";\r\nimport Telegram from \"component/Telegram/Telegram\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction ListRoom() {\r\n  const [ListRoom, setListRoom] = useState([]);\r\n  const { openModal } = useModal();\r\n  const getListRoom = async () => {\r\n    const response = await GetAllRoomsMonth();\r\n    if (response) {\r\n      setListRoom(response.data);\r\n    }else{\r\n      setListRoom([])\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListRoom();\r\n  }, []);\r\n\r\n  const HandleAdjustRoom = async (id, key) => {\r\n    const input = prompt(`Vui lòng nhập chỉ số`);\r\n\r\n    if (input) {\r\n      let value;\r\n\r\n      if (input.includes(\"+\")) {\r\n        const parts = input.split(\"+\");\r\n        const base = parseFloat(parts[0]) || 0;\r\n        const plus = parseFloat(parts[1]) || 0;\r\n        value = base + plus;\r\n      } else {\r\n        value = parseFloat(input);\r\n      }\r\n\r\n      if (!isNaN(value)) {\r\n        const object = { [key]: value };\r\n        const response = await GetUpdateRoom(id, object);\r\n        if (response) {\r\n          getListRoom();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOpenAddRoom = () => {\r\n    openModal(<AddRoomMonth list={ListRoom} />);\r\n  };\r\n\r\n  const handleDeleteRoom = async (id) => {\r\n    const password = prompt(\"Bạn hãy nhập mật khẩu để xóa phòng?\");\r\n    if (password !== \"0786566176\") {\r\n      alert(\"Mật khẩu không đúng!\");\r\n      return;\r\n    }\r\n\r\n    const response = await deleteRoomV2(id);\r\n    if (response) {\r\n      alert(\"Xóa phòng thành công!\");\r\n      getListRoom();\r\n    }\r\n  };\r\n\r\n  const handlePaymentInfo = () => {\r\n    // const filterCoastRoom = ListRoom.filter((item) => item.GiaPhong !== 0);\r\n\r\n    // const isValid = filterCoastRoom.every(\r\n    //   (item) => item.chisodienmoi !== 0 && item.chisonuoclanhmoi !== 0\r\n    // );\r\n    // if (!isValid) {\r\n    //   alert(\r\n    //     \"Để tạo hóa đơn, hãy tạo mới chỉ số điện nước của tất cả các phòng\"\r\n    //   );\r\n    //   return;\r\n    // }\r\n\r\n    openModal(<PayMentInfo props={ListRoom}/>);\r\n  };\r\n\r\n\r\n  const handleOpenAjust = (item) => {\r\n    openModal(<AdjustRoomMonth props={item} />);\r\n  }\r\n\r\n  const handleOpenTelegram = () => {\r\n    openModal(<Telegram props={1}/>)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={cx(\"search\")}>\r\n          <button\r\n            onClick={(e) => handleOpenAddRoom()}\r\n            className={cx(\"search-button\")}\r\n          >\r\n            Thêm phòng\r\n          </button>\r\n          <button\r\n            onClick={(e) => handlePaymentInfo()}\r\n            className={cx(\"search-button\")}\r\n          >\r\n            Tạo Hóa Đơn\r\n          </button>\r\n          <button\r\n            onClick={(e) => handleOpenTelegram()}\r\n            className={cx(\"search-button\")}\r\n          >\r\n            Điều khiển qua Telegram\r\n          </button>\r\n        </div>\r\n        <table className={cx(\"water-table-history-table\")}>\r\n          <thead>\r\n            <tr>\r\n              <th>STT</th>\r\n              <th>Số Phòng</th>\r\n              <th>Giá Phòng</th>\r\n              <th>Chỉ số tiêu thụ điện</th>\r\n              <th>Chỉ số tiêu thụ nước</th>\r\n              <th>Sinh hoạt</th>\r\n              <th>Trạng thái</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className={cx(\"water-table-data\")}>\r\n            {ListRoom.length > 0 ? (\r\n              ListRoom.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>\r\n                    <div className={cx(\"room-item\")}>\r\n                      <span>\r\n                        {item.SoPhong}\r\n                        <a\r\n                          onClick={() => HandleAdjustRoom(item._id, \"SoPhong\")}\r\n                          className={cx(\"plus-minus-button\")}\r\n                        >\r\n                          +\r\n                        </a>\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div className={cx(\"room-item\")}>\r\n                      <span>\r\n                        {item.GiaPhong.toLocaleString()}Đ\r\n                        <a\r\n                          onClick={() => HandleAdjustRoom(item._id, \"GiaPhong\")}\r\n                          className={cx(\"plus-minus-button\")}\r\n                        >\r\n                          +\r\n                        </a>\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div className={cx(\"room-item\")}>\r\n                      \r\n                      <span>\r\n                        Điện mới: {item.chisodienmoi}\r\n                        <a\r\n                          onClick={() => HandleAdjustRoom(item._id, \"chisodienmoi\")}\r\n                          className={cx(\"plus-minus-button\")}\r\n                        >\r\n                          +\r\n                        </a>\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div className={cx(\"room-item\")}>\r\n                    {item.loainuoc == \"chiso\" ? (\r\n  <>\r\n    <span>\r\n      Nước nóng mới: {item.chisonuocnongmoi}\r\n      <a\r\n        onClick={() => HandleAdjustRoom(item._id, \"chisonuocnongmoi\")}\r\n        className={cx(\"plus-minus-button\")}\r\n      >\r\n        +\r\n      </a>\r\n    </span>\r\n\r\n    <span>\r\n      Nước lạnh mới: {item.chisonuoclanhmoi}\r\n      <a\r\n        onClick={() => HandleAdjustRoom(item._id, \"chisonuoclanhmoi\")}\r\n        className={cx(\"plus-minus-button\")}\r\n      >\r\n        +\r\n      </a>\r\n    </span>\r\n  </>\r\n) : (\r\n  <>\r\n    <span>Số lượng: {item.songuoikhoang}</span>\r\n    <span>Khoáng {item.giakhoangnuoc.toLocaleString()}đ/người/tháng</span>\r\n  </>\r\n)}\r\n\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div className={cx(\"room-item\")}>\r\n                      <span>\r\n                        {item.sinhhoatchung.toLocaleString()}Đ\r\n                        <a\r\n                          onClick={() =>\r\n                            HandleAdjustRoom(item._id, \"sinhhoatchung\")\r\n                          }\r\n                          className={cx(\"plus-minus-button\")}\r\n                        >\r\n                          +\r\n                        </a>\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div className={cx(\"room-item\")}>\r\n                      <span>\r\n                        <a onClick={(e) => handleOpenAjust(item)} className={cx(\"plus-minus-button\", \"icon\")}>\r\n                          <FaEdit />\r\n                        </a>\r\n                        <a\r\n                          onClick={(e) => handleDeleteRoom(item._id)}\r\n                          className={cx(\"plus-minus-button\", \"icon\")}\r\n                        >\r\n                          <FaTrash />\r\n                        </a>\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td\r\n                  colSpan=\"7\"\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    padding: \"20px\",\r\n                    fontStyle: \"italic\",\r\n                  }}\r\n                >\r\n                  Không có bảng nào được ghi\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListRoom;\r\n","\r\nimport React from 'react';\r\nimport styles from './Inventory.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { useEffect, useState } from 'react';\r\nimport { useModal } from 'component/Modal/ModalContext';\r\nimport ListWater from './ListWater';\r\nimport { TestInventory,TestInventory2 } from 'api';\r\n\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nfunction Inventory() {\r\n\r\n    const [waterList, setWaterList] = useState([]);        // Dữ liệu hiển thị\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 40;\r\n    const {openModal} = useModal();\r\n\r\n    // Lấy danh sách nước\r\n    const getWaterList = async () => {\r\n        console.log(\"ham da duoc goi\")\r\n        try {\r\n            const data = await TestInventory();\r\n            if (data) {\r\n                console.log(data)\r\n                setWaterList(data);     // Hiển thị mặc định\r\n            }\r\n\r\n            return data\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy danh sách nước:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWaterList();\r\n    }, []);\r\n\r\n    // Tính toán phân trang\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = waterList.slice(indexOfFirstItem, indexOfLastItem);\r\n    \r\n\r\n    const nextPage = () => {\r\n        if (currentPage < totalPages()) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const prevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const totalPages = () => {\r\n        return Math.ceil(waterList.length / itemsPerPage);\r\n    };\r\n\r\n\r\n    const HandleBack = () => {  \r\n        \r\n        openModal(<ListWater />); // Mở modal với nội dung là component ListWater\r\n    }\r\n\r\n    const resetWt = async() => { \r\n        const password = prompt(\"Để reset bạn cần nhập mật khẩu: \")\r\n        if(password !== \"0786566176\") return alert(\"Mật khẩu không đúng\")\r\n        const data = await TestInventory2();\r\n        if(data) {\r\n            openModal(<ListWater />); // Mở modal với nội dung là component ListWater\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={cx(\"search\")}>\r\n\r\n                <button onClick={(e) => HandleBack()} className={cx(\"search-button\")}>Quay lại</button>\r\n                <button onClick={(e) => resetWt()} className={cx(\"search-button\", \"news\")}>Làm mới</button>\r\n            </div>\r\n            <table className={cx(\"water-table-history-table\")}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Loại Nước</th>\r\n                        <th>Số lượng đầu</th>\r\n                        <th>Số lượng bán</th>\r\n                        <th>Số lượng cuối</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className={cx(\"water-table-data\")}>\r\n                    {currentItems.length > 0 ? (\r\n                        currentItems.map((item, index) => (\r\n                            \r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>Nước {item.tenNuoc}</td>\r\n                                <td><span>{item.soLuongDau}</span></td>\r\n                                <td><span>{item.ban}</span></td>\r\n                                <td><span>{item.thucTeCuoiKy}</span></td>\r\n                                \r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"8\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>\r\n                                Không có bảng nào được ghi\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Pagination Controls */}\r\n            <div className={cx(\"water-table-pagination\")}>\r\n                <div className={cx(\"water-table-notification\")}>\r\n                    <span>Trang {currentPage} of {totalPages()}</span>\r\n                </div>\r\n                <div className={cx(\"water-table-controls\")}>\r\n                    <button onClick={prevPage} disabled={currentPage === 1}>\r\n                        Trang trước\r\n                    </button>\r\n                    <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n                        Trang sau\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inventory;","import React, { useEffect, useState } from 'react';\r\nimport styles from './ListWater.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { fetchWaterList, updateWater } from 'api';\r\nimport { useModal } from 'component/Modal/ModalContext';\r\nimport Inventory from 'component/WaterManager/Inventory';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nfunction ListWater() {\r\n    const { openModal } = useModal();\r\n    const [search, setSearch] = useState(\"\");\r\n    const [waterList, setWaterList] = useState([]);        // Dữ liệu hiển thị\r\n    const [originalList, setOriginalList] = useState([]);  // Dữ liệu gốc\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 40;\r\n\r\n    // Lấy danh sách nước\r\n    const getWaterList = async () => {\r\n        try {\r\n            const data = await fetchWaterList();\r\n            if (data) {\r\n                setOriginalList(data);  // Lưu bản gốc\r\n                setWaterList(data);     // Hiển thị mặc định\r\n            }\r\n\r\n            return data\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy danh sách nước:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWaterList();\r\n    }, []);\r\n\r\n\r\n    const handleSearch = (e) => {   \r\n        if(search) {\r\n            const filtered = originalList.filter((item) => item.tenNuoc.toLowerCase().includes(search.toLowerCase()));\r\n            setWaterList(filtered); \r\n            return\r\n        }\r\n\r\n        setWaterList(originalList); // Nếu không có gì thì hiển thị lại danh sách gốc\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleSearch(search)\r\n    }, [search])\r\n\r\n  \r\n\r\n    // Tính toán phân trang\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = waterList.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const nextPage = () => {\r\n        if (currentPage < totalPages()) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const prevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const totalPages = () => {\r\n        return Math.ceil(waterList.length / itemsPerPage);\r\n    };\r\n\r\n    // Cập nhật số lượng nước khi bán\r\n    const handleAddWater = async (name, type) => { \r\n        const amount = prompt(\"Nhập số lượng nước đã bán?\\nNếu muốn trừ số lượng -(số lượng muốn trừ)\");\r\n        if (amount) {\r\n            let object\r\n            if(type == \"nhap\") {\r\n                object = {\r\n                    tenNuoc: name,    \r\n                    nhap: amount || 0,\r\n                };\r\n            }else if(type == \"ban\") {\r\n                object = {\r\n                    tenNuoc: name,    \r\n                    soLuong: amount || 0,    \r\n                };\r\n            }\r\n            const updated = await updateWater(object);\r\n            if (updated) {\r\n                const response = await getWaterList();  // Cập nhật lại danh sách\r\n                alert(\"Nạp dữ liệu thành công\")\r\n                \r\n                if (search) {\r\n                    // Tự động lọc lại khi có tìm kiếm\r\n                    const filtered = response.filter((item) =>\r\n                        item.tenNuoc.toLowerCase().includes(search.toLowerCase())\r\n                    );\r\n                    setWaterList(filtered);\r\n                }\r\n            }\r\n        }\r\n    };\r\n     \r\n    const handleInventory = () => {\r\n        openModal(<Inventory />)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={cx(\"search\")}>\r\n                <input \r\n                    value={search || \"\"} \r\n                    onChange={(e) => setSearch(e.target.value)} \r\n                    type=\"text\" \r\n                    placeholder=\"Tìm kiếm...\" \r\n                    className={cx(\"search-input\")} \r\n                />\r\n                <button onClick={(e) => handleInventory()} className={cx(\"search-button\")}>Kiểm hàng</button>\r\n            </div>\r\n            <table className={cx(\"water-table-history-table\")}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Loại Nước</th>\r\n                        <th>Số lượng đầu</th>\r\n                        <th>Số lượng nhập</th>\r\n                        <th>Số lượng bán</th>\r\n                        <th>Số lượng cuối</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className={cx(\"water-table-data\")}>\r\n                    {currentItems.length > 0 ? (\r\n                        currentItems.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{indexOfFirstItem + index + 1}</td>\r\n                                <td>{item.tenNuoc}</td>\r\n                                <td>{item.soLuongDau}</td>\r\n                                <td>{item.nhap}\r\n                                    <a\r\n                                        className={cx(\"plus-minus-button\")}\r\n                                        onClick={() => handleAddWater(item.tenNuoc, \"nhap\")}\r\n                                    >\r\n                                        +\r\n                                    </a>    \r\n                                </td>\r\n                                <td>\r\n                                    {item.ban}{\" \"}\r\n                                    <a\r\n                                        className={cx(\"plus-minus-button\")}\r\n                                        onClick={() => handleAddWater(item.tenNuoc, \"ban\")}\r\n                                    >\r\n                                        +\r\n                                    </a>\r\n                                </td>\r\n                                <td>{item.thucTeCuoiKy}</td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"8\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>\r\n                                Không có bảng nào được ghi\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Pagination Controls */}\r\n            <div className={cx(\"water-table-pagination\")}>\r\n                <div className={cx(\"water-table-notification\")}>\r\n                    <span>Trang {currentPage} of {totalPages()}</span>\r\n                </div>\r\n                <div className={cx(\"water-table-controls\")}>\r\n                    <button onClick={prevPage} disabled={currentPage === 1}>\r\n                        Trang trước\r\n                    </button>\r\n                    <button onClick={nextPage} disabled={currentPage === totalPages()}>\r\n                        Trang sau\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListWater;\r\n","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport HistoryRoom from 'component/RoomDaily/History/HistoryRoom';\r\nimport ListRoomDetail from 'component/RoomDaily/ListRoomDetail/ListRoomDetail';\r\nimport ListRoom from 'component/RoomMonth/Room';\r\nimport { useModal } from 'component/Modal/ModalContext';\r\nimport ListWater from 'component/WaterManager/ListWater';\r\nimport Bill from 'component/Bill/Bill';\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Header = () => {\r\n    const { openModal } = useModal();\r\n    const handleOpenHistoryRoom = () => {\r\n        openModal(<HistoryRoom />);\r\n    }\r\n\r\n    const handleOpenListRoom = () => {  \r\n        openModal(<ListRoomDetail />);\r\n    }\r\n\r\n    const handleOpenWaterManager = () => {  \r\n        //openModal(<ListWater />);//\r\n        openModal(<Bill />)\r\n    }\r\n\r\n\r\n    const handleOpenListRoomMonth = () => {  \r\n        openModal(<ListRoom />);\r\n    }\r\n\r\n    return (\r\n        <header className={cx('header')}>\r\n            <nav className={cx('header__nav')}>\r\n                <ul className={cx('header__menu')}>\r\n                    <li className={cx('header__item')}>\r\n                        <a href=\"/\" className={cx('header__link')}>Trang chủ</a>\r\n                    </li>\r\n                    <li className={cx('header__item')}>\r\n                        <a className={cx('header__link')} onClick={() => handleOpenHistoryRoom()}  >Lịch sử</a>\r\n                    </li>\r\n                    <li className={cx('header__item')}>\r\n                        <a className={cx('header__link')} onClick={() => handleOpenListRoom()}>Danh sách phòng ngày</a>\r\n                    </li>\r\n                    <li className={cx('header__item')}>\r\n                        <a className={cx('header__link')} onClick={() => handleOpenListRoomMonth()}>Danh sách phòng tháng</a>\r\n                    </li>\r\n                    <li className={cx('header__item')}>\r\n                        <a className={cx('header__link')} onClick={() => handleOpenWaterManager()}>Quản lý nước</a>\r\n                    </li>\r\n                   \r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import { useRef } from \"react\";\r\n\r\nexport const useDebounceHandler = () => {\r\n  const debounceTimers = useRef({});\r\n\r\n\r\n  const debounce = (key, newVal, oldVal, callback, delay = 800) => {\r\n    console.log(\"hàm này hoạt động\")\r\n    if (newVal === oldVal) return;\r\n\r\n    if (debounceTimers.current[key]) {\r\n      clearTimeout(debounceTimers.current[key]);\r\n    }\r\n\r\n    debounceTimers.current[key] = setTimeout(() => {\r\n      callback();\r\n      delete debounceTimers.current[key];\r\n      console.log(\"da goi lai\")\r\n    }, delay);\r\n  };\r\n\r\n  return debounce;\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport flatpickr from \"flatpickr\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Room.module.scss\";\r\nimport { formatTimeValue, formatDateValue } from \"../dateUtils\";\r\nimport { useDebounceHandler } from \"../debounce\";\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Room = ({ room, handleInputChange, setCurrentTime, calculate }) => {\r\n  const debounce = useDebounceHandler();\r\n  const [tempDates, setTempDates] = useState({});\r\n  const checkDateRef = useRef({});\r\n  const originalRef = useRef({});\r\n\r\n  // Hàm xử lý thay đổi input\r\n  const handleChange = (type, roomNumber, e) => {\r\n    const newValue = e.target.value;\r\n\r\n    // Lấy giá trị ban đầu từ ref hoặc tính toán từ room nếu chưa có giá trị\r\n    const originalValue = originalRef.current[`${type}-${roomNumber}`] ??\r\n      (type === \"date\" ? formatDateValue(room.checkInDate) : formatTimeValue(room.checkInDate));\r\n\r\n    // Cập nhật giá trị mới vào originalRef để theo dõi sự thay đổi\r\n    originalRef.current[`${type}-${roomNumber}`] = newValue;\r\n\r\n    // Cập nhật state (tempDates) với giá trị mới\r\n    setTempDates((prev) => ({\r\n      ...prev,\r\n      [`${type}-${roomNumber}`]: newValue,\r\n    }));\r\n\r\n    // Gọi debounce sau khi cập nhật state\r\n    debounce(\r\n      `${type}-${roomNumber}`,\r\n      newValue,\r\n      originalValue,\r\n      () => {\r\n        // Truyền đúng dữ liệu vào handleInputChange\r\n        handleInputChange(roomNumber, {\r\n          type,\r\n          value: newValue,\r\n          ...(type === \"checkTimeDate\"\r\n            ? {\r\n                date: tempDates[`checkInDate-${room.roomNumber}`] ?? formatDateValue(room.checkInDate),\r\n              }\r\n            : {\r\n                time: tempDates[`checkTimeDate-${room.roomNumber}`] ?? formatTimeValue(room.checkInDate),\r\n              }),\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  // Hàm khởi tạo flatpickr\r\n  const initFlatpickr = () => {\r\n    if (!checkDateRef.current[room.roomNumber]) return;\r\n\r\n    const refs = checkDateRef.current[room.roomNumber];\r\n\r\n    flatpickr(refs.checkindate, {\r\n      dateFormat: \"d-m-Y\",\r\n     \r\n      onChange: () => handleChange(\"checkInDate\", room.roomNumber, { target: { value: refs.checkindate.value } }), // Gọi handleChange khi chọn ngày\r\n    });\r\n\r\n    flatpickr(refs.checkoutdate, {\r\n      dateFormat: \"d-m-Y\",\r\n      //onChange: () => handleChange(\"checkOutDate\", room.roomNumber, { target: { value: refs.checkoutdate.value } }), // Gọi handleChange khi chọn ngày\r\n    });\r\n\r\n    flatpickr(refs.checkintime, {\r\n      enableTime: true,\r\n      noCalendar: true,\r\n      dateFormat: \"H:i\",\r\n      time_24hr: true,\r\n      minuteIncrement: 60,\r\n      onChange: () => handleChange(\"checkTimeDate\", room.roomNumber, { target: { value: refs.checkintime.value } }), // Gọi handleChange khi chọn thời gian\r\n    });\r\n\r\n    flatpickr(refs.checkouttime, {\r\n      enableTime: true,\r\n      noCalendar: true,\r\n      dateFormat: \"H:i\",\r\n      time_24hr: true,\r\n      minuteIncrement: 60,\r\n      \r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    initFlatpickr();\r\n  }, [room.roomNumber]);\r\n\r\n  // Hàm để gán ref cho các input\r\n  const setRef = (el, key) => {\r\n    if (!checkDateRef.current[room.roomNumber]) {\r\n      checkDateRef.current[room.roomNumber] = {};\r\n    }\r\n    if (el) {\r\n      checkDateRef.current[room.roomNumber][key] = el;\r\n    }\r\n  };\r\n\r\n  // Hàm tính tiền\r\n  const handleCalculate = () => {\r\n    calculate(room.roomNumber, checkDateRef);\r\n  };\r\n\r\n  return (\r\n    <div className={cx(\"room\")}>\r\n      <h3>Phòng {String(room.roomNumber).padStart(3, \"0\")}</h3>\r\n\r\n      {/* Check-in */}\r\n      <div className={cx(\"time-container\")}>\r\n        <input\r\n          ref={(el) => setRef(el, \"checkindate\")}\r\n          type=\"text\"\r\n          id={`checkin-date-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n          value={tempDates[`checkInDate-${room.roomNumber}`] ?? formatDateValue(room.checkInDate)}\r\n          onChange={(e) => handleChange(\"checkInDate\", room.roomNumber, e)}\r\n        />\r\n        <input\r\n          ref={(el) => setRef(el, \"checkintime\")}\r\n          type=\"text\"\r\n          id={`checkin-time-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n          value={tempDates[`checkTimeDate-${room.roomNumber}`] ?? formatTimeValue(room.checkInDate)}\r\n          onChange={(e) => handleChange(\"checkTimeDate\", room.roomNumber, e)}\r\n        />\r\n      </div>\r\n\r\n      {/* Check-out */}\r\n      <div className={cx(\"time-container\")}>\r\n        <input\r\n          ref={(el) => setRef(el, \"checkoutdate\")}\r\n          type=\"text\"\r\n          id={`checkout-date-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n          \r\n          \r\n        />\r\n        <input\r\n          ref={(el) => setRef(el, \"checkouttime\")}\r\n          type=\"text\"\r\n          id={`checkout-time-${room.roomNumber}`}\r\n          className={cx(\"time-picker\")}\r\n         \r\n         \r\n        />\r\n      </div>\r\n\r\n      {/* Buttons */}\r\n      <div className={cx(\"btn-container\")}>\r\n        <div className={cx(\"btn-top\")}>\r\n          <button className={cx(\"check-in\")} onClick={() => setCurrentTime(\"checkin\", room.roomNumber, checkDateRef)}>\r\n            Nhận phòng\r\n          </button>\r\n          <button className={cx(\"check-out\")} onClick={() => setCurrentTime(\"checkout\", room.roomNumber, checkDateRef)}>\r\n            Trả phòng\r\n          </button>\r\n        </div>\r\n        <div className={cx(\"btn-bottom\")}>\r\n          <button className={cx(\"btn-calculate\")} onClick={handleCalculate}>\r\n            Tính tiền\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Room from \"./Room\";\r\nimport {\r\n  fetchRoomsList,\r\n  editRoom,\r\n  saveRoomHistory,\r\n  deleteRoomData,\r\n} from \"../../api\"; // Giả sử hàm này sẽ fetch dữ liệu từ API\r\nimport classNames from \"classnames/bind\";\r\nimport styles from \"./Room.module.scss\";\r\nimport { convertToStandardDateFormat, convertToISODate } from \"../dateUtils\";\r\nimport { useModal } from \"../Modal/ModalContext\";\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst RoomList = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const depositRef = useRef(null);\r\n  const deposit2Ref = useRef(null);\r\n\r\n  const { openModal, closeModal } = useModal();\r\n\r\n  useEffect(() => {\r\n    const loadRooms = async () => {\r\n      const fetchedRooms = await fetchRoomsList();\r\n      const sortedRooms = fetchedRooms.sort(\r\n        (a, b) => a.roomNumber - b.roomNumber\r\n      );\r\n      setRooms(sortedRooms);\r\n    };\r\n\r\n    loadRooms();\r\n  }, []);\r\n\r\n  const handleInputChange = async (roomNumber, data) => {\r\n    let date;\r\n    if (data.type === \"checkTimeDate\") {\r\n      date = data.date + \" \" + data.value;\r\n    } else {\r\n      date = data.value + \" \" + data.time;\r\n    }\r\n    await editRoom(String(roomNumber), { checkInDate: date });\r\n  };\r\n\r\n  const setCurrentTime = async (type, roomNumber, ref) => {\r\n    const now = new Date();\r\n    const dateStr = now.toLocaleDateString(\"vi-VN\"); // \"24/04/2025\"\r\n    const hours = String(now.getHours()).padStart(2, \"0\");\r\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n    const timeStr = `${hours}:${minutes}`;\r\n\r\n    const dateStrBK = convertToStandardDateFormat(dateStr, timeStr); // GIỮ NGUYÊN LOGIC\r\n\r\n    if (type === \"checkin\") {\r\n      const checkinDateInput = ref.current[roomNumber][\"checkindate\"];\r\n      const checkinTimeInput = ref.current[roomNumber][\"checkintime\"];\r\n\r\n      if (checkinDateInput && checkinDateInput._flatpickr) {\r\n        checkinDateInput.value = dateStr; // Hiển thị trực tiếp\r\n        checkinDateInput._flatpickr.setDate(dateStr, true, \"d-m-Y\");\r\n      }\r\n\r\n      if (checkinTimeInput && checkinTimeInput._flatpickr) {\r\n        checkinTimeInput.value = timeStr;\r\n        checkinTimeInput._flatpickr.setDate(timeStr, true, \"H:i\");\r\n      }\r\n\r\n      const response = await editRoom(String(roomNumber), {\r\n        checkInDate: dateStrBK,\r\n      });\r\n      if (response) return window.location.reload();\r\n\r\n      \r\n    } else {\r\n      const checkoutDateInput = ref.current[roomNumber][\"checkoutdate\"];\r\n      const checkoutTimeInput = ref.current[roomNumber][\"checkouttime\"];\r\n\r\n      if (checkoutDateInput && checkoutDateInput._flatpickr) {\r\n        checkoutDateInput.value = dateStr;\r\n        checkoutDateInput._flatpickr.setDate(dateStr, true, \"d-m-Y\");\r\n      }\r\n\r\n      if (checkoutTimeInput && checkoutTimeInput._flatpickr) {\r\n        checkoutTimeInput.value = timeStr;\r\n        checkoutTimeInput._flatpickr.setDate(timeStr, true, \"H:i\");\r\n      }\r\n\r\n     \r\n    }\r\n  };\r\n\r\n  const calculate = (roomNumber, data) => {\r\n    const ref = data;\r\n    const checkInDate = convertToISODate(\r\n      ref.current[roomNumber][\"checkindate\"].value\r\n    );\r\n    const checkInTime = ref.current[roomNumber][\"checkintime\"].value;\r\n    const checkOutDate = convertToISODate(\r\n      ref.current[roomNumber][\"checkoutdate\"].value\r\n    );\r\n    const checkOutTime = ref.current[roomNumber][\"checkouttime\"].value;\r\n\r\n    if (!checkInDate || !checkInTime || !checkOutDate || !checkOutTime) {\r\n      return openModal(\r\n        <p style={{ textAlign: \"center\" }}>Vui lòng nhập đầy đủ thời gian.</p>\r\n      );\r\n    }\r\n\r\n    const start = new Date(`${checkInDate}T${checkInTime}`);\r\n    const end = new Date(`${checkOutDate}T${checkOutTime}`);\r\n\r\n    if (end <= start) {\r\n      return openModal(\r\n        <p style={{ textAlign: \"center\" }}>\r\n          Thời gian trả phòng cần được thiết lập muộn hơn thời gian nhận phòng\r\n          để đảm bảo hợp lệ.\r\n        </p>\r\n      );\r\n    }\r\n\r\n    let total = 0;\r\n    const notes = [];\r\n    const diffMs = end - start;\r\n    const diffMinutes = Math.ceil(diffMs / 60000);\r\n    const diffHours = Math.ceil(diffMs / 3600000);\r\n    const startHour = start.getHours();\r\n    const endHour = end.getHours();\r\n    const isSameDay = start.toDateString() === end.toDateString();\r\n    const isNightStay =\r\n      startHour >= 19 &&\r\n      startHour <= 23 &&\r\n      endHour >= 0 &&\r\n      endHour <= 2 &&\r\n      diffHours <= 9;\r\n\r\n    const dataRoom = rooms.find((room) => room.roomNumber === roomNumber);\r\n\r\n    // Danh sách ngày lễ\r\n    const holidays = {\r\n      \"01-01\": \"Tết Dương Lịch\",\r\n      \"30-04\": \"Giải phóng miền Nam\",\r\n      \"01-05\": \"Quốc tế Lao động\",\r\n      \"02-09\": \"Quốc khánh\",\r\n    };\r\n\r\n    // Hàm đếm ngày lễ\r\n    function getHolidayDays(start, end) {\r\n      const holidayCounts = {};\r\n      const current = new Date(start);\r\n      current.setHours(0, 0, 0, 0);\r\n      const endDate = new Date(end);\r\n      endDate.setHours(0, 0, 0, 0);\r\n\r\n      while (current <= endDate) {\r\n        const currentStr = current\r\n          .toLocaleDateString(\"vi-VN\", { day: \"2-digit\", month: \"2-digit\" })\r\n          .replace(/\\//g, \"-\");\r\n        if (holidays[currentStr]) {\r\n          holidayCounts[holidays[currentStr]] =\r\n            (holidayCounts[holidays[currentStr]] || 0) + 1;\r\n        }\r\n        current.setDate(current.getDate() + 1);\r\n      }\r\n      return holidayCounts;\r\n    }\r\n\r\n    // ----- Tính giá -----\r\n    let surcharge = 0;\r\n    let holidaySurcharge = 0;\r\n\r\n    if (isSameDay || isNightStay) {\r\n      // Thuê theo giờ\r\n      total = dataRoom.firstHour;\r\n      notes.push(`Giờ đầu: ${dataRoom.firstHour.toLocaleString()} VNĐ`);\r\n\r\n      const extraMinutes = diffMinutes - 60;\r\n      const extraHoursCharged =\r\n        extraMinutes > 0 ? Math.floor((extraMinutes + 45) / 60) : 0;\r\n\r\n      if (extraHoursCharged > 0) {\r\n        let temp = new Date(start);\r\n        temp.setMinutes(temp.getMinutes() + 60); // Bỏ 1 giờ đầu\r\n\r\n        let totalExtraHourSurcharge = 0;\r\n        let holidayHours = 0;\r\n\r\n        for (let i = 0; i < extraHoursCharged; i++) {\r\n          const currentStr = temp\r\n            .toLocaleDateString(\"vi-VN\", { day: \"2-digit\", month: \"2-digit\" })\r\n            .replace(/\\//g, \"-\");\r\n          const isHoliday = holidays[currentStr];\r\n          const hourPrice = dataRoom.extraHour + (isHoliday ? 10000 : 0);\r\n          totalExtraHourSurcharge += hourPrice;\r\n          if (isHoliday) holidayHours++;\r\n          temp.setHours(temp.getHours() + 1);\r\n        }\r\n\r\n        notes.push(\r\n          `Phụ thu: ${extraHoursCharged} giờ x ${dataRoom.extraHour.toLocaleString()} VNĐ ${\r\n            holidayHours > 0 ? `(Ngày lễ: ${holidayHours} giờ)` : \"\"\r\n          } = ${totalExtraHourSurcharge.toLocaleString()} VNĐ`\r\n        );\r\n        total += totalExtraHourSurcharge;\r\n      }\r\n    } else {\r\n      // Thuê qua đêm\r\n      if (startHour >= 5 && startHour <= 12) {\r\n        const surchargeHours = 12 - startHour;\r\n        if (surchargeHours > 0) {\r\n          surcharge += surchargeHours * dataRoom.extraHour;\r\n          notes.push(\r\n            `Phụ thu nhận phòng sớm: ${surchargeHours} giờ x ${dataRoom.extraHour.toLocaleString()} VNĐ`\r\n          );\r\n        }\r\n      }\r\n\r\n      const firstDayEnd = new Date(start);\r\n      firstDayEnd.setDate(firstDayEnd.getDate() + 1);\r\n      firstDayEnd.setHours(12, 0, 0, 0);\r\n\r\n      if (end <= firstDayEnd) {\r\n        total = dataRoom.daily;\r\n        notes.push(`Tính 1 ngày: ${dataRoom.daily.toLocaleString()} VNĐ`);\r\n      } else {\r\n        const lastNoon = new Date(end);\r\n        lastNoon.setHours(12, 0, 0, 0);\r\n        const fullDays = Math.round((lastNoon - firstDayEnd) / 86400000) + 1;\r\n        total = fullDays * dataRoom.daily;\r\n        notes.push(`${fullDays} ngày x ${dataRoom.daily.toLocaleString()} VNĐ`);\r\n      }\r\n\r\n      if (endHour >= 12) {\r\n        const extraHours = endHour - 12;\r\n        if (extraHours > 0) {\r\n          surcharge += extraHours * dataRoom.extraHour;\r\n          notes.push(\r\n            `Phụ thu trả phòng muộn: ${extraHours} giờ x ${dataRoom.extraHour.toLocaleString()} VNĐ`\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    let holidayHours = 0;\r\n    // -------- Tính phụ thu lễ --------\r\n    if (!isSameDay) {\r\n      const holidayCounts = getHolidayDays(start, end);\r\n      for (const name in holidayCounts) {\r\n        holidaySurcharge += holidayCounts[name] * 100000;\r\n        notes.push(`Qua đêm ngày lễ ${name}: +100,000 VNĐ`);\r\n      }\r\n\r\n      if (endHour >= 12) {\r\n        const extraHours = endHour - 12;\r\n        if (extraHours > 0) {\r\n          const temp = new Date(start);\r\n          while (temp <= end) {\r\n            const currentStr = temp\r\n              .toLocaleDateString(\"vi-VN\", { day: \"2-digit\", month: \"2-digit\" })\r\n              .replace(/\\//g, \"-\");\r\n            if (holidays[currentStr]) {\r\n              holidayHours = extraHours;\r\n              holidaySurcharge += extraHours * 10000;\r\n              break; // chỉ cần 1 lần gặp ngày lễ là cộng\r\n            }\r\n            temp.setHours(temp.getHours() + 1);\r\n          }\r\n        }\r\n      }\r\n    } \r\n\r\n    // Ghi chú tổng số giờ phụ thu lễ\r\n    if (holidayHours > 0) {\r\n      notes.push(\r\n        `Phụ thu ${holidayHours} giờ lễ x 10,000 VNĐ = ${(\r\n          holidayHours * 10000\r\n        ).toLocaleString()} VNĐ`\r\n      );\r\n    }\r\n\r\n    // 3. Ghi chú tổng phụ thu lễ\r\n    if (holidaySurcharge > 0) {\r\n      notes.push(`Tổng phụ thu lễ: +${holidaySurcharge.toLocaleString()} VNĐ`);\r\n    }\r\n\r\n    // ----------------- Kết thúc -----------------\r\n    total += surcharge + holidaySurcharge;\r\n\r\n    // Ghi chú thời gian ở thực\r\n    notes.push(\r\n      `Thời gian ở thực: ${\r\n        diffMinutes >= 1440\r\n          ? `${Math.floor(diffMinutes / 1440)} ngày${\r\n              diffMinutes % 1440\r\n                ? ` ${Math.floor((diffMinutes % 1440) / 60)} giờ ${\r\n                    diffMinutes % 60\r\n                  } phút`\r\n                : \"\"\r\n            }`\r\n          : `${Math.floor(diffMinutes / 60)} giờ ${diffMinutes % 60} phút`\r\n      }`\r\n    );\r\n\r\n    const objectDatatoSaveHistory = {\r\n      totalAmount: total.toLocaleString(),\r\n      checkInDate: start.toLocaleString(),\r\n      checkOutDate: end.toLocaleString(),\r\n      description: notes.map((note) => `<span>${note}</span>`).join(\"\"),\r\n    };\r\n\r\n    const HandleSaveDatatoHistory = async () => {\r\n      ref.current[roomNumber][\"checkindate\"].value = \"\";\r\n      ref.current[roomNumber][\"checkintime\"].value = \"\";\r\n      ref.current[roomNumber][\"checkoutdate\"].value = \"\";\r\n      ref.current[roomNumber][\"checkouttime\"].value = \"\";\r\n      deleteRoomData(roomNumber);\r\n      await saveRoomHistory(roomNumber, objectDatatoSaveHistory);\r\n      closeModal();\r\n    };\r\n\r\n    const handleDeposit = () => {\r\n      console.log(depositRef);\r\n      const rawValue = depositRef.current.value.replace(/\\./g, \"\");\r\n      const numberValue = parseInt(rawValue, 10) || 0;\r\n      const formatted = numberValue.toLocaleString();\r\n      depositRef.current.value = formatted;\r\n      deposit2Ref.current.innerText =\r\n        (numberValue - total).toLocaleString() < 0\r\n          ? 0\r\n          : (numberValue - total).toLocaleString();\r\n    };\r\n    openModal(\r\n      <div className={cx(\"calculate\")}>\r\n        <h3 className={cx(\"calculate-header\")}>Chi tiết tính tiền</h3>\r\n        <p className={cx(\"room-info\")}>\r\n          <span className={cx(\"title\")}>Phòng:</span> <span>{roomNumber}</span>\r\n        </p>\r\n        <p className={cx(\"check-in-time\")}>\r\n          <span className={cx(\"title\")}>Nhận phòng:</span>{\" \"}\r\n          <span>{start.toLocaleString()}</span>\r\n        </p>\r\n        <p className={cx(\"check-out-time\")}>\r\n          <span className={cx(\"title\")}>Trả phòng:</span>{\" \"}\r\n          <span>{end.toLocaleString()}</span>\r\n        </p>\r\n        {notes.map((note, i) => (\r\n          <p className={cx(\"additional-note\")} key={i}>\r\n            <span>{note}</span>\r\n          </p>\r\n        ))}\r\n        <p className={cx(\"total-amount\")}>\r\n          <span>Tổng tiền:</span> <span>{total.toLocaleString()} VNĐ</span>\r\n        </p>\r\n        <p className={cx(\"total-amount\")}>\r\n          <span>Khách đưa:</span>{\" \"}\r\n          <input\r\n            ref={depositRef}\r\n            type=\"text\"\r\n            onChange={(e) => handleDeposit(e.target.value)}\r\n            placeholder=\"Nhập số tiền khách hàng\"\r\n          />\r\n          <span>\r\n            Thối lại khách: <b ref={deposit2Ref}>0</b>\r\n          </span>\r\n        </p>\r\n        <div className={cx(\"control\")}>\r\n          <button\r\n            className={cx(\"button\")}\r\n            onClick={() => HandleSaveDatatoHistory()}\r\n          >\r\n            Lưu dữ liệu\r\n          </button>\r\n          <button className={cx(\"button\")} onClick={() => closeModal()}>\r\n            Tạm tính\r\n          </button>\r\n        </div>\r\n        <div className={cx(\"footer-note\")}>\r\n          <span>Phần mềm được tạo bởi Hữu Đức</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id={cx(\"room\")}>\r\n      {rooms && rooms.length > 0 ? (\r\n        rooms.map((room) => (\r\n          <Room\r\n            key={room.roomNumber}\r\n            room={room}\r\n            handleInputChange={handleInputChange}\r\n            setCurrentTime={setCurrentTime}\r\n            calculate={calculate}\r\n          />\r\n        ))\r\n      ) : (\r\n        <span>Hiện tại chưa có phòng nào được thêm vào dữ liệu</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomList;\r\n","import { useModal } from \"./ModalContext\";\r\nimport styles from './modal.module.scss'; // Đảm bảo SCSS của bạn được import ở đây\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\n\r\nconst GlobalModal = () => {\r\n  const { showModal, closeModal, modalContent } = useModal();\r\n\r\n  if (!showModal) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className={cx(\"overlay\")}></div>\r\n      <div className={cx(\"modal-wrapper\")}>\r\n        <div className={`${cx('modal-parent')}`}>\r\n          <div className={`${cx('modal-content')}`} onClick={(e) => e.stopPropagation()}>\r\n            <div onClick={closeModal} className={cx(\"modal-close\")}>x</div>\r\n            {modalContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GlobalModal;","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './App.module.scss';\nimport Header from './layout/Header';\nimport RoomList from './component/RoomDaily/RoomList';\nimport { ModalProvider } from './component/Modal/ModalContext';\nimport GlobalModal from './component/Modal/GlobalModal.js';\nimport { Route, Routes } from 'react-router';\nimport Bill from 'component/Bill/Bill';\n\nconst cx = classNames.bind(styles);\n\nfunction App() {\n  return (\n\n    <ModalProvider>\n      <div className={cx('App')}>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={ <RoomList />} />\n          {/* <Route path=\"/hata/:room\" element={ <Bill />} /> */}\n        </Routes>\n      \n        <GlobalModal />\n      </div>\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invoice-container\":\"PaymentInfo_invoice-container__8MVfW\",\"print\":\"PaymentInfo_print__15Xrd\",\"choice\":\"PaymentInfo_choice__3zw5T\",\"invoice-title\":\"PaymentInfo_invoice-title__11WgS\",\"invoice-summary\":\"PaymentInfo_invoice-summary__1P9ND\",\"summary-item\":\"PaymentInfo_summary-item__2VuQ7\",\"btn-summary\":\"PaymentInfo_btn-summary__3lvE-\",\"btn-total\":\"PaymentInfo_btn-total__1oEO1\",\"btn-refresh\":\"PaymentInfo_btn-refresh__3Om1H\",\"btn-back\":\"PaymentInfo_btn-back__15h45\",\"refresh\":\"PaymentInfo_refresh__3ELEp\",\"invoice-list\":\"PaymentInfo_invoice-list__10HsF\",\"invoice-card\":\"PaymentInfo_invoice-card__IZ8w3\",\"customer-name\":\"PaymentInfo_customer-name__mpk_C\",\"invoice-info\":\"PaymentInfo_invoice-info__1KHji\",\"invoice-charges\":\"PaymentInfo_invoice-charges__2X9b4\",\"divider\":\"PaymentInfo_divider__3ypoz\",\"invoice-info-item\":\"PaymentInfo_invoice-info-item__wX7f1\",\"info-line\":\"PaymentInfo_info-line__2tyYB\",\"charge-line\":\"PaymentInfo_charge-line__35bUn\",\"total-amount\":\"PaymentInfo_total-amount__KxI6-\",\"result\":\"PaymentInfo_result__C1cke\",\"result-item\":\"PaymentInfo_result-item__2HAsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"room\":\"Room_room__3dn-v\",\"edit-room\":\"Room_edit-room__2UOE_\",\"time-container\":\"Room_time-container__1cqrG\",\"btn-container\":\"Room_btn-container__3bsDN\",\"btn-top\":\"Room_btn-top__3f26V\",\"check-in\":\"Room_check-in__uGDzQ\",\"check-out\":\"Room_check-out__245g2\",\"button\":\"Room_button__3GK7E\",\"btn-calculate\":\"Room_btn-calculate__12o8-\",\"calculate\":\"Room_calculate__NsbGe\",\"borderRun\":\"Room_borderRun__1BOZk\",\"calculate-header\":\"Room_calculate-header__2oNqo\",\"room-info\":\"Room_room-info__1i3is\",\"check-in-time\":\"Room_check-in-time__P7-KB\",\"check-out-time\":\"Room_check-out-time__2e3DF\",\"total-amount\":\"Room_total-amount__2ZyRh\",\"title\":\"Room_title__2iwMF\",\"additional-note\":\"Room_additional-note__w53VK\",\"control\":\"Room_control__1S4n6\",\"footer-note\":\"Room_footer-note__307lz\",\"title-table\":\"Room_title-table__3aXL3\",\"filter-container\":\"Room_filter-container__3TJ1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1vo9O\",\"borderRun\":\"App_borderRun__2iWKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1jUDE\",\"header__nav\":\"Header_header__nav__2dn1u\",\"header__menu\":\"Header_header__menu__31mMF\",\"header__item\":\"Header_header__item__2tILp\",\"header__link\":\"Header_header__link__SinI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title-table\":\"History_title-table__228zP\",\"history-table\":\"History_history-table__IC4Mj\",\"add-room\":\"History_add-room__XPnpc\",\"pagination\":\"History_pagination__2zJno\",\"notification\":\"History_notification__-NJI2\",\"controls\":\"History_controls__-CZIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title-table\":\"ListRoomDetail_title-table__ml7io\",\"control\":\"ListRoomDetail_control__3Ezzv\",\"add-room\":\"ListRoomDetail_add-room__33fcw\",\"telegram\":\"ListRoomDetail_telegram__2Vxns\",\"history-table\":\"ListRoomDetail_history-table__1vKnO\",\"plus-button\":\"ListRoomDetail_plus-button__2Vl5a\",\"pagination\":\"ListRoomDetail_pagination__1xP6h\",\"notification\":\"ListRoomDetail_notification__2XcTJ\",\"controls\":\"ListRoomDetail_controls__16woz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddRoom_container__2M6M9\",\"title\":\"AddRoom_title__3u_SX\",\"form\":\"AddRoom_form__1RRjs\",\"row\":\"AddRoom_row__1LWc4\",\"formGroup\":\"AddRoom_formGroup__3GaUv\",\"label\":\"AddRoom_label__2wxth\",\"input\":\"AddRoom_input__1MztV\",\"button\":\"AddRoom_button__2XxF9\",\"message\":\"AddRoom_message__2miCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Telegram_container__2LSO1\",\"image-wrapper\":\"Telegram_image-wrapper__3hNmw\",\"image\":\"Telegram_image__2Wx52\",\"header\":\"Telegram_header__3ISEH\",\"intro\":\"Telegram_intro__dcMgh\",\"spacer\":\"Telegram_spacer__SN81I\",\"step\":\"Telegram_step__agFSe\",\"instruction\":\"Telegram_instruction__1Vy5q\",\"example\":\"Telegram_example__3_Ixs\",\"note\":\"Telegram_note__2HcRx\",\"detail\":\"Telegram_detail__24UQ5\",\"response\":\"Telegram_response__228LW\",\"footer\":\"Telegram_footer__3rfZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Room_search__aVuJX\",\"title-table\":\"Room_title-table__3a3Ee\",\"water-table-history-table\":\"Room_water-table-history-table__2ujk4\",\"room-item\":\"Room_room-item__1g_o5\",\"plus-minus-button\":\"Room_plus-minus-button__2-584\",\"icon\":\"Room_icon__PY6Iu\",\"water-table-pagination\":\"Room_water-table-pagination__2252z\",\"water-table-notification\":\"Room_water-table-notification__3cwnB\",\"water-table-controls\":\"Room_water-table-controls__NPaqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddRoomMonth_container__2uQBT\",\"title\":\"AddRoomMonth_title__3m1W5\",\"form\":\"AddRoomMonth_form__YIc8x\",\"section\":\"AddRoomMonth_section__1rOws\",\"sectionTitle\":\"AddRoomMonth_sectionTitle__2V3sT\",\"selection\":\"AddRoomMonth_selection__r-ezt\",\"row\":\"AddRoomMonth_row__dD2_F\",\"formGroup\":\"AddRoomMonth_formGroup__1wN6m\",\"label\":\"AddRoomMonth_label__3rlyw\",\"input\":\"AddRoomMonth_input__bPdOM\",\"control\":\"AddRoomMonth_control__2KH-h\",\"button\":\"AddRoomMonth_button__3D-hd\",\"message\":\"AddRoomMonth_message__3nk94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdjustRoom_container__385Ji\",\"title\":\"AdjustRoom_title__33BYK\",\"form\":\"AdjustRoom_form__3TEOn\",\"formGroup\":\"AdjustRoom_formGroup__3lZkF\",\"label\":\"AdjustRoom_label__P0DyX\",\"input\":\"AdjustRoom_input__WsTMm\",\"control\":\"AdjustRoom_control__3BKud\",\"button\":\"AdjustRoom_button__3u51z\",\"message\":\"AdjustRoom_message__1QMLd\",\"inputGroup\":\"AdjustRoom_inputGroup__19yiE\",\"w-100\":\"AdjustRoom_w-100__sa1jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invoice-container\":\"Bill_invoice-container__3wGGX\",\"tutorial\":\"Bill_tutorial__32PsE\",\"container_billhata\":\"Bill_container_billhata__2PBmG\",\"header\":\"Bill_header__2EMB5\",\"left\":\"Bill_left__2cZDv\",\"center\":\"Bill_center__1HWQi\",\"right\":\"Bill_right__1k_H5\",\"info\":\"Bill_info__1-g9a\",\"line\":\"Bill_line__1Qc6s\",\"w-32\":\"Bill_w-32__2nGEe\",\"w-64\":\"Bill_w-64__3V9WE\",\"w-96\":\"Bill_w-96__kIyKz\",\"w-420\":\"Bill_w-420__19InM\",\"footer\":\"Bill_footer__1lba5\",\"image\":\"Bill_image__1LHlj\",\"text\":\"Bill_text__3aQLy\",\"text-center\":\"Bill_text-center__1Ukue\",\"customer-text\":\"Bill_customer-text__22ivF\",\"total\":\"Bill_total__EyTSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TotalPaymentInfo_container__IapsC\",\"center\":\"TotalPaymentInfo_center__3V9Fq\",\"summary-item\":\"TotalPaymentInfo_summary-item__3czLD\",\"btn-summary\":\"TotalPaymentInfo_btn-summary__5wW_y\",\"btn-total\":\"TotalPaymentInfo_btn-total__3qdz1\",\"result\":\"TotalPaymentInfo_result__3Lb7s\",\"result-item\":\"TotalPaymentInfo_result-item__1YjMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"ListWater_search__1kSQX\",\"title-table\":\"ListWater_title-table__2mf65\",\"water-table-history-table\":\"ListWater_water-table-history-table__2cswU\",\"plus-minus-button\":\"ListWater_plus-minus-button__1Rrs8\",\"water-table-pagination\":\"ListWater_water-table-pagination__3SGE1\",\"water-table-notification\":\"ListWater_water-table-notification__26L_G\",\"water-table-controls\":\"ListWater_water-table-controls__1KLWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Inventory_search__2uETV\",\"news\":\"Inventory_news__2U8HP\",\"title-table\":\"Inventory_title-table__wiBor\",\"water-table-history-table\":\"Inventory_water-table-history-table__2gojk\",\"water-table-pagination\":\"Inventory_water-table-pagination___jlke\",\"water-table-notification\":\"Inventory_water-table-notification__259yr\",\"water-table-controls\":\"Inventory_water-table-controls__1INCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal_overlay__2wYXf\",\"modal-parent\":\"modal_modal-parent__2mNpV\",\"modal-content\":\"modal_modal-content__26qwn\",\"modal-close\":\"modal_modal-close__2J9y6\"};"],"sourceRoot":""}